{"version":3,"sources":["evmLib.js","feathersLib.js","Lib.js","game/TXAlert.js","game/LPVault.js","game/PoSVault.js","game/ZoVault.js","game/NFTOwned.js","game/Dashboard.js","App.js","serviceWorker.js","index.js","config.js"],"names":["require","CHAIN_ID","TOKEN","TOKEN_IMAGE","PROVIDER_URL","ROUTER_ADDRESS","FACTORY_ADDRESS","ethers","axios","PROVIDER","providers","JsonRpcProvider","PK","Wallet","createRandom","privateKey","WALLET","TOKEN_JSON","TOKEN_ABI","abi","TOKEN_ADDRESS","networks","address","VAULT_JSON","VAULT_ABI","VAULT_ADDRESS","NFT_JSON","NFT_ABI","NFT_ADDRESS","SESSION_JSON","SESSION_ABI","SESSION_ADDRESS","ROUTER_ABI","FACTORY_ABI","PVR_JSON","PVR_ABI","PVR_ADDRESS","POSVAULT_JSON","POSVAULT_ABI","POSVAULT_ADDRESS","POSPOOL_ABI","posPool","Contract","LPVAULT_JSON","LPVAULT_ABI","LPVAULT_ADDRESS","PAIR_ABI","PAIR_ADDRESS","pairLP","ZV_JSON","ZV_ABI","ZV_ADDRESS","ZVR_JSON","ZVR_ABI","ZVR_ADDRESS","window","ethereum","Error","on","_chainId","location","reload","request","method","chainId","Number","isConnected","enable","provider","Web3Provider","tmp","loadWallet","pk","wallet","getBlockNumber","blockNum","getBlock","block","timestamp","getWalletBalance","getBalance","balance","getPrice","eth","amountIn","utils","parseEther","path","WETH_ADDRESS","console","log","toString","router","getAmountsOut","result","price","WETH","factory","getPair","pairAddress","pair","getReserves","reserves","token0","reserveToken","reserveCoin","nft","getStat","data","totalPayment","numNFT","index","getNFTData","id","createdTime","refId","share","signer","amountCoin","getAddress","mint","value","tx","hash","vault","amountInToken","tokenToCoin","amountOutCoin","amountInCoin","coinToToken","amountOutToken","getBasePrice","basePrice","priceReverse","token","balanceOf","balanceToken","session","sss","history","ns","toNumber","i","getDataAtIndex","s","unshift","turn","totalShare","totalGenerated","profitPerShare","createdAt","snapshotPrice","currentTurn","currentTotalShare","numSession","numOwned","nfts","tokenOfOwnerByIndex","nftData1","startTurn","uri","metadata","get","error","getNFTHistory","nftData2","nftData","Object","assign","push","nftId","totalUnclaimed","BigNumber","from","unclaimedTurns","getNFTClaimed","claimed","gt","profit","mul","unclaimed","sub","add","ret","turns","claimReward","tokenAddress","tokenSymbol","tokenImage","params","type","options","symbol","decimals","image","getCfxPrice","eq","pvr","userSummary","posPoolData","currentTotalStake","stakeOnPVR","stakeOnPP","available","retiredMode","getAverageDailyInterest","dailyInterest","dailyInterestCfx","priceToken","formatEther","dailyInterest1000Cfx","dailyInterest1Cfx","div","apyCalc1","Math","pow","apyCalc2","apy","numRewardHistory","rhLength","rhIndex","getRewardHistory","rh","lastRewardTime","nextRewardAvailable","ownedCFX","pv","userData","ud","numStake","unstakeTime","wrLength","pendingWithdraw","userWithdrawRequestData","wrIndex","claimer","withdrawAmount","deadline","toLowerCase","getUnclaimedReward","ur","unclaimedReward","posVaultReward","amount","posVault","opt","stake","amountWei","unstake","claimWithdraw","wait","lpVault","avgDailyInterest","numHistory","N","rowN","rowNM1","lastDeltaTime","lastReward","lastDailyInterest","totalSupply","totalSupplyLP","reserve0","singleLP","oneLP2CFX","priceLP","dailyInterestCFX","interest","getUserData","ownedLP","allowance","approved","approve","constants","MaxUint256","stakeAmount","stakeLPToken","unstakeLPToken","zv","zvr","totalStake","stakeOnZV","totalRewardPerStake","staked","detectMetamask","loadMetamask","loadWalletRandom","getBlockchainTime","wei2eth","wei","formatUnits","eth2wei","toBN","val","getSwapData","getVaultData","getNFTDataAtIndex","mintNFT","getSessionData","getOwnedNFTData","getOwnedNFTDataUri","getOwnedNFTDetail","claimNFTProfit","addTokenToMetamask","getPosVaultData","getPosVaultDataUser","claimPosVaultYield","stakePosVault","unstakePosVault","claimPosVaultWithdraw","getLPVaultData","getLPVaultDataUser","approveLPVault","stakeLPVault","unstakeLPVault","claimLPVaultYield","getZoVaultData","getZoVaultDataUser","claimZoVaultYield","stakeZoVault","unstakeZoVault","SERVER","moment","io","feathers","socket","client","configure","socketio","timeout","authentication","swapDataService","service","sessionDataService","calcPctg","startP","endP","find","query","$limit","sd","total","$sort","ts","sddata","skip","length","$skip","concat","tsNow","unix","tsd1","tsd7","tsd30","tsd365","currentPrice","ath","atl","priced1","priced7","priced30","priced365","row","lt","pctg1","pctg7","pctg30","pctg365","athPctg","atlPctg","ssd","sessions","avgProfitPerShare","ssData","divider","h","format","generated","evmLib","generatedPerShare","athPrice","atlPrice","nftMinted","nftGenerated","getPublicData","Toastify","msg","backgroundColor","gravity","position","text","showToast","ms","Promise","resolve","reject","setTimeout","key","localStorage","getItem","setItem","clear","delay","openUrl","url","open","focus","openUrlHere","getStorageValue","setStorageValue","clearStorageValue","remainingText","seconds","secs","numDays","floor","numHours","numMinute","shortHex","hexStr","slice","to2digit","to5digit","Text","Typography","EXPLORER_TX","TXAlert","props","state","wording","this","txStatus","toUpperCase","linkToExplorer","txHash","shortTxHash","Lib","direction","align","onClick","title","visible","showTxPopup","centered","footer","onBack","style","textAlign","React","Component","Panel","Collapse","Title","LPVAULT_LINK","LP_LINK","LPVault","blockchainTime","setState","refreshVaultData","prevProps","prevState","prevMetamask","metamask","nextMetamask","refreshVaultDataUser","Modal","maskClosable","content","okType","vaultData","vaultDataUser","getSigner","modalError","d","apyInfo","numStaked","unstakeAllowDate","unclaimedYield","noUserData","enableUnstake","apyCalc","enableMax","now","info","xs","accordion","header","gutter","level","renderAPYCalc","du","isAfter","disableBtnYieldClaim","txtYield","txtUnstakeTime","btnStake","btnUnstake","btnApprove","disabled","approveVault","stakeVault","unstakeVault","calcInfo","sm","showAPYCalc","height","src","headStyle","display","flex","addonAfter","placeholder","onChange","e","target","claimVaultYield","VAULT_LINK","VAULTREWARD_LINK","TRADE_LINK","PoSVault","dataSource","columns","dataIndex","render","record","flexDirection","justifyContent","alignItems","claimWithdrawRequest","responsive","size","bordered","pendingUnstake","renderPendingUnstake","ZV_LINK","ZVR_LINK","ZoVault","NFTOwned","connected","nftId2detail","refreshData","refreshDataUser","prevRefreshNum","refreshNum","nextRefreshNum","ownedNFTs","busyDataOwned","dataOwned","detail","undefined","rows","owned","name","img","unclaimedProfit","justify","map","item","line","span","width","claimProfit","OUT","Paragraph","Footer","Layout","Content","GAS","DEX","CHAIN_NAME","FORUM_LINK","TWITTER_LINK","TELEGRAM_LINK","TOKEN_LINK","NFT_LINK","CHART_LINK","DEXTOOLS","Mobile","children","useMediaQuery","maxWidth","Default","minWidth","Dashboard","showDisclaimer","metamaskStatus","busyData","posVaultError","minterError","connectWallet","feathersLib","publicData","message","metamaskError","refreshPosVaultData","refreshPosVaultDataUser","posVaultData","posVaultDataUser","page","copyToClipboard","padding","shortTokenAddress","toPrice","ATH","ATL","pc1","pc7","pc30","pc365","btn","out","join","renderTitle","suffix","onCopy","icon","CopyOutlined","gotoDex","errMetamask","btnMetamask","links","split","Link","gotoTwitter","gotoTelegram","gotoForum","renderModal","renderModalTx","overflowX","md","lg","xl","xxl","renderTop","renderHero","renderStat","renderMinter","avgPPS","estDailyToken","estDailyProfit","estDailyTokenCFX","estROI","round","closable","onClose","HddOutlined","fontSize","GlobalRouter","component","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports","USDT","TOKEN_NAME","PRIMARY_COLOR","MAINNET_FORK"],"mappings":"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","file":"static/js/main.6bc4da3c.chunk.js","sourcesContent":["const {\n  CHAIN_ID,\n  TOKEN,\n  TOKEN_IMAGE,\n  PROVIDER_URL,\n  ROUTER_ADDRESS,\n  FACTORY_ADDRESS\n} = require('./config');\n\nconst ethers = require(\"ethers\").ethers;\nconst axios = require('axios');\n\nconst PROVIDER = new ethers.providers.JsonRpcProvider(PROVIDER_URL);\nconst PK = (ethers.Wallet.createRandom()).privateKey;\nconst WALLET = new ethers.Wallet(PK, PROVIDER);\n\nconst TOKEN_JSON = require('./json/TraderbotXToken.json');\nconst TOKEN_ABI = TOKEN_JSON.abi;\nconst TOKEN_ADDRESS = TOKEN_JSON.networks[CHAIN_ID].address;\n\nconst VAULT_JSON = require('./json/Vaultv4.json');\nconst VAULT_ABI = VAULT_JSON.abi;\nconst VAULT_ADDRESS = VAULT_JSON.networks[CHAIN_ID].address;\n\nconst NFT_JSON = require('./json/TraderbotXNFT.json');\nconst NFT_ABI = NFT_JSON.abi;\nconst NFT_ADDRESS = NFT_JSON.networks[CHAIN_ID].address;\n\nconst SESSION_JSON = require('./json/Session.json');\nconst SESSION_ABI = SESSION_JSON.abi;\nconst SESSION_ADDRESS = SESSION_JSON.networks[CHAIN_ID].address;\n\nconst ROUTER_ABI = require('./json/IROUTER.json').abi;\nconst FACTORY_ABI = require('./json/IFACTORY.json').abi;\n\nconst PVR_JSON = require('./json/PosVaultRewardV2.json');\nconst PVR_ABI = PVR_JSON.abi;\nconst PVR_ADDRESS = PVR_JSON.networks[CHAIN_ID].address;\n\nconst POSVAULT_JSON = require('./json/PosVaultV2.json');\nconst POSVAULT_ABI = POSVAULT_JSON.abi;\nconst POSVAULT_ADDRESS = POSVAULT_JSON.networks[CHAIN_ID].address;\n\nconst POSPOOL_JSON = require('./json/IPOSPOOL.json');\nconst POSPOOL_ABI = POSPOOL_JSON.abi;\nconst POSPOOL_ADDRESS = '0x3cbc6f7d406fe9701573fe6ddf28f4f17b5d46a3';\nconst posPool = new ethers.Contract(POSPOOL_ADDRESS, POSPOOL_ABI, WALLET);\n\nconst LPVAULT_JSON = require('./json/LPVault.json');\nconst LPVAULT_ABI = LPVAULT_JSON.abi;\nconst LPVAULT_ADDRESS = LPVAULT_JSON.networks[CHAIN_ID].address;\n\nconst PAIR_JSON = require('./json/IPAIR.json');\nconst PAIR_ABI = PAIR_JSON.abi;\nconst PAIR_ADDRESS = '0x2c5224B24277134cb5CeC82541D23c2f769205de';\nconst pairLP = new ethers.Contract(PAIR_ADDRESS, PAIR_ABI, WALLET);\n\nconst ZV_JSON = require('./json/ZOVault.json');\nconst ZV_ABI = ZV_JSON.abi;\nconst ZV_ADDRESS = ZV_JSON.networks[CHAIN_ID].address;\n\nconst ZVR_JSON = require('./json/ZOVaultReward.json');\nconst ZVR_ABI = ZVR_JSON.abi;\nconst ZVR_ADDRESS = ZVR_JSON.networks[CHAIN_ID].address;\n\nconsole.log({ ZV_ADDRESS, ZVR_ADDRESS });\n\nasync function detectMetamask() {\n  if (!window.ethereum) throw new Error('Please install Metamask and reload!');\n\n  window.ethereum.on('chainChanged', (_chainId) => window.location.reload());\n\n  let chainId = await window.ethereum.request({ method: 'eth_chainId' });\n  chainId = Number(chainId);\n  if (chainId !== CHAIN_ID) throw new Error('Please connect Metamask to Conflux eSpace!');\n\n  return window.ethereum.isConnected();\n}\n\nasync function loadMetamask() {\n  window.ethereum.enable();\n  let provider = new ethers.providers.Web3Provider(window.ethereum);\n  return provider;\n}\n\nasync function loadWalletRandom() {\n  const tmp = ethers.Wallet.createRandom();\n  return await loadWallet(tmp.privateKey);\n}\n\nasync function loadWallet(pk) {\n  let provider = new ethers.providers.JsonRpcProvider(PROVIDER_URL);\n  const wallet = new ethers.Wallet(pk, provider);\n  return wallet;\n}\n\nasync function getBlockchainTime() {\n  let provider = PROVIDER;\n  const blockNum = await provider.getBlockNumber();\n  const block = await provider.getBlock(blockNum);\n  return block.timestamp;\n}\n\nasync function getWalletBalance(address) {\n  let provider = PROVIDER;\n  const balance = await provider.getBalance(address);\n  return balance;\n}\n\nfunction wei2eth(wei) {\n  return ethers.utils.formatUnits(wei, \"ether\");\n}\n\nfunction eth2wei(eth) {\n  return ethers.utils.parseEther(eth);\n}\n\nfunction toBN(val) {\n  return ethers.BigNumber.from(val);\n}\n\nasync function getSwapData(wallet) {\n  const router = new ethers.Contract(ROUTER_ADDRESS, ROUTER_ABI, wallet);\n  const WETH_ADDRESS = await router.WETH();\n  async function getPrice(eth) {\n    let amountIn = ethers.utils.parseEther(eth); // 1E18 TOKEN = ? COIN\n    let path = [\n      TOKEN_ADDRESS,\n      WETH_ADDRESS\n    ];\n    console.log(amountIn.toString());\n    let result = await router.getAmountsOut(amountIn, path);\n\n    const price = result[1];\n    return price;\n  }\n\n  const price = await getPrice('1');\n\n  const factory = new ethers.Contract(FACTORY_ADDRESS, FACTORY_ABI, wallet);\n  const pairAddress = await factory.getPair(\n    TOKEN_ADDRESS,\n    WETH_ADDRESS\n  );\n\n  const pair = new ethers.Contract(pairAddress, PAIR_ABI, wallet);\n  const reserves = await pair.getReserves();\n  const token0 = await pair.token0();\n\n  let reserveToken;\n  let reserveCoin;\n\n  if (token0 === TOKEN_ADDRESS) {\n    reserveToken = reserves[0];\n    reserveCoin = reserves[1];\n  } else if (token0 === WETH_ADDRESS) {\n    reserveCoin = reserves[0];\n    reserveToken = reserves[1];\n  }\n\n  return {\n    pairAddress,\n    price,\n    reserveCoin,\n    reserveToken\n  }\n}\n\nasync function getNFTData(wallet) {\n  const nft = new ethers.Contract(NFT_ADDRESS, NFT_ABI, wallet);\n  const data = await nft.getStat();\n  const totalPayment = data[0];\n  const numNFT = data[1];\n\n  return {\n    totalPayment,\n    numNFT\n  }\n}\n\nasync function getNFTDataAtIndex(wallet, index) {\n  const nft = new ethers.Contract(NFT_ADDRESS, NFT_ABI, wallet);\n  const data = await nft.getNFTData(index);\n\n  return {\n    id: data[0],\n    createdTime: data[1],\n    refId: data[2],\n    share: data[3]\n  }\n}\n\nasync function mintNFT(signer, amountCoin, refId) {\n  console.log('mintNFT');\n  const nft = new ethers.Contract(NFT_ADDRESS, NFT_ABI, signer);\n  const address = await signer.getAddress();\n  const tx = await nft.mint(address, refId, { value: amountCoin });\n  console.log('nft.mint tx: ' + tx.hash);\n  return tx;\n}\n\nasync function getVaultData(wallet, address) {\n  const balance = await wallet.provider.getBalance(VAULT_ADDRESS);\n\n  const vault = new ethers.Contract(VAULT_ADDRESS, VAULT_ABI, wallet);\n\n  const amountInToken = ethers.utils.parseEther('1'); // 1 TOKEN = ? COIN\n  const amountOutCoin = await vault.tokenToCoin(amountInToken, address);\n  const amountInCoin = ethers.utils.parseEther('1');\n  const amountOutToken = await vault.coinToToken(amountInCoin, address);\n\n  const basePrice = await vault.getBasePrice();\n\n  return {\n    balance,\n    price: amountOutCoin,\n    priceReverse: amountOutToken,\n    basePrice: basePrice.toString()\n  }\n}\n\nasync function getSessionData(wallet) {\n  const token = new ethers.Contract(TOKEN_ADDRESS, TOKEN_ABI, wallet);\n  const balanceToken = await token.balanceOf(SESSION_ADDRESS);\n  const session = new ethers.Contract(SESSION_ADDRESS, SESSION_ABI, wallet);\n  const sss = await session.getStat();\n\n  const history = [];\n  const ns = sss[2].toNumber();\n  if (ns > 1) {\n    for (let i = 1; i < ns; i++) {\n      const s = await session.getDataAtIndex(i);\n      history.unshift({\n        turn: s[0],\n        totalShare: s[1],\n        totalGenerated: s[2],\n        profitPerShare: s[3],\n        createdAt: s[4],\n        snapshotPrice: s[5]\n      });\n    }\n  }\n\n  return {\n    balanceToken,\n    currentTurn: sss[0],\n    currentTotalShare: sss[1],\n    numSession: sss[2],\n    history\n  }\n}\n\nasync function getOwnedNFTData(wallet, address) {\n  const session = new ethers.Contract(SESSION_ADDRESS, SESSION_ABI, wallet);\n  const nft = new ethers.Contract(NFT_ADDRESS, NFT_ABI, wallet);\n\n  const sss = await session.getStat();\n  const currentTurn = sss[0].toNumber();\n\n  const numOwned = await nft.balanceOf(address);\n  const nfts = [];\n  for (let i = 0; i < numOwned; i++) {\n    const id = await nft.tokenOfOwnerByIndex(address, i);\n    const data = await session.getNFTData(id);\n\n    const nftData1 = {\n      id,\n      startTurn: data[0],\n      refId: data[1],\n      share: data[2],\n      uri: 'https://ddb7-54-169-184-214.ap.ngrok.io/nft?nftId=' + id\n    }\n\n    let metadata = {};\n\n    try {\n      const result = await axios.get(nftData1.uri);\n      metadata = result.data;\n    } catch (err) {\n      console.error(err);\n    }\n\n    nftData1.metadata = metadata;\n\n    const nftData2 = await getNFTHistory(wallet, id, currentTurn, nftData1.startTurn, nftData1.share);\n    const nftData = Object.assign({}, nftData1, nftData2);\n    nfts.push(nftData);\n  }\n\n  return nfts;\n}\n\nasync function getOwnedNFTDataUri(wallet, address) {\n  const nft = new ethers.Contract(NFT_ADDRESS, NFT_ABI, wallet);\n\n  const numOwned = await nft.balanceOf(address);\n  const nfts = [];\n  for (let i = 0; i < numOwned; i++) {\n    const id = await nft.tokenOfOwnerByIndex(address, i);\n\n    const nftData1 = {\n      id,\n      uri: 'https://ddb7-54-169-184-214.ap.ngrok.io/nft?nftId=' + id\n    }\n\n    let metadata = {};\n\n    try {\n      const result = await axios.get(nftData1.uri);\n      metadata = result.data;\n    } catch (err) {\n      console.error(err);\n    }\n\n    nftData1.metadata = metadata;\n    nfts.push(nftData1);\n  }\n\n  return nfts;\n}\n\nasync function getOwnedNFTDetail(nftId, wallet) {\n  console.log('getOwnedNFTDetail: ', nftId);\n  const session = new ethers.Contract(SESSION_ADDRESS, SESSION_ABI, wallet);\n  const sss = await session.getStat();\n  const currentTurn = sss[0].toNumber();\n  const data = await session.getNFTData(nftId);\n\n  const nftData1 = {\n    startTurn: data[0],\n    refId: data[1],\n    share: data[2]\n  }\n\n  const nftData2 = await getNFTHistory(wallet, nftId, currentTurn, nftData1.startTurn, nftData1.share);\n  const nftData = Object.assign({}, nftData1, nftData2);\n  console.log('getOwnedNFTDetail: done');\n  return nftData;\n}\n\nasync function getNFTHistory(wallet, nftId, currentTurn, startTurn, share) {\n  const session = new ethers.Contract(SESSION_ADDRESS, SESSION_ABI, wallet);\n\n  let totalUnclaimed = ethers.BigNumber.from(0);\n  const unclaimedTurns = [];\n\n  for (let turn = startTurn; turn < currentTurn; turn++) {\n    const claimed = await session.getNFTClaimed(nftId, turn);\n    if (claimed.gt(0)) continue;\n\n    const data = await session.getDataAtIndex(turn);\n    const profitPerShare = data[3];\n    const profit = profitPerShare.mul(share);\n    const unclaimed = profit.sub(claimed);\n    totalUnclaimed = totalUnclaimed.add(unclaimed);\n\n    if (claimed.toString() !== profit.toString()) {\n      unclaimedTurns.push(turn);\n    }\n  }\n\n  const ret = {\n    totalUnclaimed,\n    unclaimedTurns\n  }\n  return ret;\n}\n\n// async function getNFTHistory(wallet, nftId, currentTurn, startTurn, share) {\n//   const session = new ethers.Contract(SESSION_ADDRESS, SESSION_ABI, wallet);\n\n//   let totalProfit = ethers.BigNumber.from(0);\n//   let totalClaimed = ethers.BigNumber.from(0);\n//   let totalUnclaimed = ethers.BigNumber.from(0);\n//   const history = [];\n//   const unclaimedTurns = [];\n\n//   // for (let turn = (currentTurn - 1); turn >= startTurn.toNumber(); turn--) {\n//   for (let turn = startTurn; turn < currentTurn.toNumber(); turn++) {\n\n//     const data = await session.getDataAtIndex(turn);\n//     const profitPerShare = data[3];\n//     const profit = profitPerShare.mul(share);\n//     totalProfit = totalProfit.add(profit);\n\n//     const claimed = await session.getNFTClaimed(nftId, turn);\n//     totalClaimed = totalClaimed.add(claimed);\n\n//     const unclaimed = profit.sub(claimed);\n//     totalUnclaimed = totalUnclaimed.add(unclaimed);\n\n//     if (claimed.toString() !== profit.toString()) {\n//       unclaimedTurns.push(turn);\n//     }\n\n//     history.push({ turn, profit, claimed, unclaimed });\n\n//     if (unclaimed.eq('0')) break;\n//   }\n\n//   const ret = {\n//     // totalProfit,\n//     // totalClaimed,\n//     // history,\n//     totalUnclaimed,\n//     unclaimedTurns\n//   }\n//   return ret;\n// }\n\nasync function claimNFTProfit(signer, nftId, turns) {\n  console.log('claimNFTProfit');\n  const session = new ethers.Contract(SESSION_ADDRESS, SESSION_ABI, signer);\n  const tx = await session.claimReward(nftId, turns);\n  console.log('session.claimReward tx: ' + tx.hash);\n  return tx;\n}\n\nasync function addTokenToMetamask() {\n  const tokenAddress = TOKEN_ADDRESS;\n  const tokenSymbol = TOKEN;\n  const tokenDecimals = 18;\n  const tokenImage = TOKEN_IMAGE;\n\n  try {\n    // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n    const wasAdded = await window.ethereum.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20', // Initially only supports ERC20, but eventually more!\n        options: {\n          address: tokenAddress, // The address that the token is at.\n          symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n          decimals: tokenDecimals, // The number of decimals in the token\n          image: tokenImage, // A string url of the token logo\n        },\n      },\n    });\n\n    if (wasAdded) {\n      console.log('token added!');\n    } else {\n      console.log('token not added!');\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function getCfxPrice(wallet, amountIn) {\n  const router = new ethers.Contract(ROUTER_ADDRESS, ROUTER_ABI, wallet);\n  const WETH_ADDRESS = await router.WETH();\n\n  let path = [\n    TOKEN_ADDRESS,\n    WETH_ADDRESS\n  ];\n\n  if (amountIn.eq(0)) return ethers.BigNumber.from(0);\n  let result = await router.getAmountsOut(amountIn, path);\n\n  const price = result[1];\n  return price;\n}\n\nasync function getPosVaultData() {\n  const wallet = WALLET;\n  const pvr = new ethers.Contract(PVR_ADDRESS, PVR_ABI, wallet);\n\n  const posPoolData = await posPool.userSummary(POSVAULT_ADDRESS);\n  const stakeOnPVR = (await pvr.currentTotalStake()).toNumber();\n  const stakeOnPP = posPoolData.available.toNumber();\n  const retiredMode = (stakeOnPVR !== stakeOnPP);\n  console.log({ stakeOnPVR, stakeOnPP, retiredMode });\n\n  const dailyInterest = await pvr.getAverageDailyInterest();\n  const dailyInterestCfx = await getCfxPrice(wallet, dailyInterest);\n  const priceToken = await getCfxPrice(wallet, ethers.utils.parseEther('1'));\n\n  const ret = {\n    retiredMode,\n    priceToken: ethers.utils.formatEther(priceToken.toString()),\n    dailyInterest: ethers.utils.formatEther(dailyInterest.toString()),\n    dailyInterest1000Cfx: ethers.utils.formatEther(dailyInterestCfx.toString()),\n    dailyInterest1Cfx: ethers.utils.formatEther(dailyInterestCfx.div(1000).toString())\n  };\n\n  ret.apyCalc1 = Math.pow((1 + Number(ret.dailyInterest1Cfx)), 365);\n  ret.apyCalc2 = ret.apyCalc1 - 1;\n  ret.apy = ret.apyCalc2 * 100;\n\n  const rhLength = await pvr.numRewardHistory();\n  const rhIndex = rhLength.toNumber() - 1;\n  const rh = await pvr.getRewardHistory(rhIndex);\n  const lastRewardTime = rh[3].toNumber();\n  ret.nextRewardAvailable = lastRewardTime + (24 * 3600);\n\n  console.log(ret);\n\n  return ret;\n}\n\nasync function getPosVaultDataUser(wallet) {\n  const pvr = new ethers.Contract(PVR_ADDRESS, PVR_ABI, wallet);\n\n  const ret = {\n  };\n\n  const ownedCFX = await getWalletBalance(wallet.address);\n  ret.ownedCFX = ethers.utils.formatEther(ownedCFX.toString());\n\n  const pv = new ethers.Contract(POSVAULT_ADDRESS, POSVAULT_ABI, wallet);\n  const ud = await pv.userData(wallet.address);\n\n  const numStake = ud[0];\n  let unstakeTime = ud[1].toNumber();\n  // hardcode hack\n  // phx pool lock period still 7 days, so it must be added 6 days to be 13 days\n  unstakeTime += (3600 * 24 * 6);\n  const wrLength = ud[2].toNumber();\n\n  ret.numStake = ethers.utils.formatEther(numStake.toString());\n  ret.unstakeTime = unstakeTime;\n  ret.wrLength = wrLength;\n\n  const pendingWithdraw = [];\n  for (let i = 0; i < wrLength; i++) {\n    const data = await pv.userWithdrawRequestData(wallet.address, i);\n    const wrIndex = data[0].toNumber();\n    const claimer = data[1];\n    const withdrawAmount = data[2];\n    const deadline = data[3].toNumber();\n    const done = data[4];\n\n    if (!done && claimer.toLowerCase() === wallet.address.toLowerCase()) {\n      pendingWithdraw.push({\n        wrIndex,\n        withdrawAmount: ethers.utils.formatEther(withdrawAmount.toString()),\n        deadline\n      });\n    }\n  }\n  ret.pendingWithdraw = pendingWithdraw;\n\n  const ur = await pvr.getUnclaimedReward(wallet.address);\n  ret.unclaimedReward = ethers.utils.formatEther(ur.toString());\n  console.log('** getPosVaultDataUser **');\n  console.log(ret);\n  return ret;\n}\n\nasync function claimPosVaultYield(signer) {\n  console.log('claimPosVaultYield');\n  const posVaultReward = new ethers.Contract(PVR_ADDRESS, PVR_ABI, signer);\n  const tx = await posVaultReward.claimReward();\n  console.log('posVaultReward.claimReward tx: ' + tx.hash);\n  return tx;\n}\n\nasync function stakePosVault(signer, amount) {\n  console.log('stakePosVault');\n  const posVault = new ethers.Contract(POSVAULT_ADDRESS, POSVAULT_ABI, signer);\n  let opt = {\n    value: ethers.utils.parseEther(amount)\n  }\n  const tx = await posVault.stake(opt);\n  console.log('posVault.stake tx: ' + tx.hash);\n  return tx;\n}\n\nasync function unstakePosVault(signer, amount) {\n  console.log('unstakePosVault');\n  const posVault = new ethers.Contract(POSVAULT_ADDRESS, POSVAULT_ABI, signer);\n  const amountWei = ethers.utils.parseEther(amount);\n  const tx = await posVault.unstake(amountWei);\n  console.log('posVault.unstake tx: ' + tx.hash);\n  return tx;\n}\n\nasync function claimPosVaultWithdraw(signer, index) {\n  console.log('claimPosVaultWithdraw');\n  const posVault = new ethers.Contract(POSVAULT_ADDRESS, POSVAULT_ABI, signer);\n  const tx = await posVault.claimWithdraw(index);\n  console.log('posVault.unstake tx: ' + tx.hash);\n  await tx.wait();\n  return tx;\n}\n\nasync function getLPVaultData() {\n  const wallet = WALLET;\n  const lpVault = new ethers.Contract(LPVAULT_ADDRESS, LPVAULT_ABI, wallet);\n\n  // const staked = (await lpVault.currentTotalStake()).toString();\n  const avgDailyInterest = await lpVault.getAverageDailyInterest();\n\n  let dailyInterest = avgDailyInterest;\n  const numHistory = (await lpVault.numRewardHistory()).toNumber();\n  if (numHistory >= 3) {\n    const N = numHistory - 1;\n    const rowN = await lpVault.getRewardHistory(N);\n    const rowNM1 = await lpVault.getRewardHistory(N - 1);\n    const lastDeltaTime = rowN[3].sub(rowNM1[3]);\n    const lastReward = rowN[2];\n    const oneDay = 3600 * 24;\n    const lastDailyInterest = lastReward.mul(oneDay).div(lastDeltaTime);\n    dailyInterest = lastDailyInterest;\n  }\n\n  // const currentTotalStake = await lpVault.currentTotalStake();\n  // const currentTurn = await lpVault.currentTurn();\n  // const startRewardTime = await lpVault.startRewardTime();\n  const lastRewardTime = await lpVault.lastRewardTime();\n  const nextRewardAvailable = lastRewardTime.toNumber() + (3600 * 24);\n  // const totalRewardPerStake = await lpVault.totalRewardPerStake();\n\n  const dailyInterestCfx = await getCfxPrice(wallet, dailyInterest);\n  const priceToken = await getCfxPrice(wallet, ethers.utils.parseEther('1'));\n\n  // calc 1LP = ? CFX\n\n  const totalSupplyLP = await pairLP.totalSupply();\n  const reserves = await pairLP.getReserves();\n  const reserve0 = reserves[0];\n  // const reserve1 = reserves[1];\n\n  console.log('** calc LP APY **');\n  const singleLP = ethers.utils.parseEther('1');\n\n  const oneLP2CFX = singleLP.mul(reserve0).div(totalSupplyLP); // price of 1 LP in CFX\n  // const oneLP2TXT = singleLP.mul(reserve1).div(totalSupplyLP); // price of 1 LP in TXT\n\n  const ret = {\n    priceToken: ethers.utils.formatEther(priceToken.toString()),\n    priceLP: ethers.utils.formatEther(oneLP2CFX.toString()),\n    dailyInterest: ethers.utils.formatEther(dailyInterest.toString()),\n    dailyInterestCFX: ethers.utils.formatEther(dailyInterestCfx.toString()),\n    lastRewardTime: lastRewardTime.toNumber(),\n    apy: 0,\n    nextRewardAvailable\n  };\n\n  const interest = Number(ret.dailyInterestCFX) / Number(ret.priceLP);\n  const apyCalc1 = Math.pow((1 + Number(interest)), 365);\n  const apyCalc2 = apyCalc1 - 1;\n  const apy = apyCalc2 * 100;\n  // const apy = Math.pow((1 + Number(interest)), 365) * 100;\n\n  ret.apyCalc1 = apyCalc1;\n  ret.apyCalc2 = apyCalc2;\n  ret.apy = apy;\n  ret.interest = interest;\n\n  console.log('LP Vault Data:');\n  console.log(ret);\n\n  return ret;\n}\n\nasync function getLPVaultDataUser(wallet) {\n  const lpVault = new ethers.Contract(LPVAULT_ADDRESS, LPVAULT_ABI, wallet);\n\n  const userData = await lpVault.getUserData(wallet.address);\n  const numStake = userData[1];\n  const unstakeTime = await userData[2];\n  const unclaimedReward = await lpVault.getUnclaimedReward(wallet.address);\n  const ownedLP = await pairLP.balanceOf(wallet.address);\n  const approved = await pairLP.allowance(wallet.address, LPVAULT_ADDRESS);\n\n  const ret = {\n    numStake: ethers.utils.formatEther(numStake.toString()),\n    unstakeTime: unstakeTime.toNumber(),\n    unclaimedReward: ethers.utils.formatEther(unclaimedReward.toString()),\n    ownedLP: ethers.utils.formatEther(ownedLP.toString()),\n    approved: approved.gt(0)\n  };\n\n  console.log('LP Vault Data User:');\n  console.log(ret);\n  return ret;\n}\n\nasync function approveLPVault(signer) {\n  console.log('approveLPVault');\n  const pairLP = new ethers.Contract(PAIR_ADDRESS, PAIR_ABI, signer);\n  const tx = await pairLP.approve(LPVAULT_ADDRESS, ethers.constants.MaxUint256);\n  console.log('pairLP.approve tx:', tx.hash);\n  return tx;\n}\n\nasync function stakeLPVault(signer, amount) {\n  console.log('stakeLPVault');\n  const stakeAmount = ethers.utils.parseEther(amount);\n  const lpVault = new ethers.Contract(LPVAULT_ADDRESS, LPVAULT_ABI, signer);\n  const tx = await lpVault.stakeLPToken(stakeAmount);\n  console.log('lpVault.stakeLPToken tx:', tx.hash);\n  return tx;\n}\n\nasync function unstakeLPVault(signer, amount) {\n  console.log('unstakeLPVault');\n  const stakeAmount = ethers.utils.parseEther(amount);\n  const lpVault = new ethers.Contract(LPVAULT_ADDRESS, LPVAULT_ABI, signer);\n  const tx = await lpVault.unstakeLPToken(stakeAmount);\n  console.log('lpVault.unstakeLPToken tx:', tx.hash);\n  return tx;\n}\n\nasync function claimLPVaultYield(signer) {\n  console.log('claimLPVaultYield');\n  const lpVault = new ethers.Contract(LPVAULT_ADDRESS, LPVAULT_ABI, signer);\n  const tx = await lpVault.claimReward();\n  console.log('lpVault.claimReward tx: ' + tx.hash);\n  return tx;\n}\n\nasync function getZoVaultData() {\n  const wallet = WALLET;\n  const zv = new ethers.Contract(ZV_ADDRESS, ZV_ABI, wallet);\n  const zvr = new ethers.Contract(ZVR_ADDRESS, ZVR_ABI, wallet);\n\n  const stakeOnZV = await zv.totalStake();\n\n  console.log('** zo vault data **');\n  console.log('stakeOnZV: ', stakeOnZV.toString());\n\n  const totalRewardPerStake = await zvr.totalRewardPerStake();\n  console.log('totalRewardPerStake: ', totalRewardPerStake.toString());\n\n  const dailyInterest = await zvr.getAverageDailyInterest();\n  console.log('avgDailyInterest: ', dailyInterest.toString());\n\n  const dailyInterestCfx = await getCfxPrice(wallet, dailyInterest);\n  console.log('avgDailyInterestCFX: ', dailyInterestCfx.toString());\n\n  const priceToken = await getCfxPrice(wallet, ethers.utils.parseEther('1'));\n\n  const ret = {\n    staked: ethers.utils.formatEther(stakeOnZV.toString()),\n    priceToken: ethers.utils.formatEther(priceToken.toString()),\n    dailyInterest: ethers.utils.formatEther(dailyInterest.toString()),\n    dailyInterestCfx: ethers.utils.formatEther(dailyInterestCfx.toString())\n  };\n\n  ret.apyCalc1 = Math.pow((1 + Number(ret.dailyInterestCfx)), 365);\n  ret.apyCalc2 = ret.apyCalc1 - 1;\n  ret.apy = ret.apyCalc2 * 100;\n\n  const rhLength = await zvr.numRewardHistory();\n  const rhIndex = rhLength.toNumber() - 1;\n  const rh = await zvr.getRewardHistory(rhIndex);\n  const lastRewardTime = rh[3].toNumber();\n  ret.nextRewardAvailable = lastRewardTime + (24 * 3600);\n\n  console.log(ret);\n\n  return ret;\n}\n\nasync function getZoVaultDataUser(wallet) {\n  const zv = new ethers.Contract(ZV_ADDRESS, ZV_ABI, wallet);\n  const zvr = new ethers.Contract(ZVR_ADDRESS, ZVR_ABI, wallet);\n\n  const ret = {\n  };\n\n  const ownedCFX = await getWalletBalance(wallet.address);\n  ret.ownedCFX = ethers.utils.formatEther(ownedCFX.toString());\n\n  const ud = await zv.userData(wallet.address);\n\n  const numStake = ud[0];\n  const unstakeTime = ud[1].toNumber();\n\n  ret.numStake = ethers.utils.formatEther(numStake.toString());\n  ret.unstakeTime = unstakeTime;\n\n  const ur = await zvr.getUnclaimedReward(wallet.address);\n  ret.unclaimedReward = ethers.utils.formatEther(ur.toString());\n\n  console.log('** ZOVaultDataUser **');\n  console.log(ret);\n  return ret;\n}\n\nasync function claimZoVaultYield(signer) {\n  console.log('claimZoVaultYield');\n  const zvr = new ethers.Contract(ZVR_ADDRESS, ZVR_ABI, signer);\n  const tx = await zvr.claimReward();\n  console.log('zvr.claimReward tx: ' + tx.hash);\n  return tx;\n}\n\nasync function stakeZoVault(signer, amount) {\n  console.log('stakePosVault');\n  const zv = new ethers.Contract(ZV_ADDRESS, ZV_ABI, signer);\n  let opt = {\n    value: ethers.utils.parseEther(amount)\n  }\n  const tx = await zv.stake(opt);\n  console.log('zv.stake tx: ' + tx.hash);\n  return tx;\n}\n\nasync function unstakeZoVault(signer, amount) {\n  console.log('unstakeZoVault');\n  const zv = new ethers.Contract(ZV_ADDRESS, ZV_ABI, signer);\n  const amountWei = ethers.utils.parseEther(amount);\n  const tx = await zv.unstake(amountWei);\n  console.log('zv.unstake tx: ' + tx.hash);\n  return tx;\n}\n\nexport default {\n  // module.exports = {\n  CHAIN_ID,\n  TOKEN_ADDRESS,\n  detectMetamask,\n  loadMetamask,\n  loadWalletRandom,\n  loadWallet,\n  getBlockchainTime,\n  getWalletBalance,\n  wei2eth,\n  eth2wei,\n  toBN,\n  getSwapData,\n  getVaultData,\n  getNFTData,\n  getNFTDataAtIndex,\n  mintNFT,\n  getSessionData,\n  getOwnedNFTData,\n  getOwnedNFTDataUri,\n  getOwnedNFTDetail,\n  claimNFTProfit,\n  addTokenToMetamask,\n  getPosVaultData,\n  getPosVaultDataUser,\n  claimPosVaultYield,\n  stakePosVault,\n  unstakePosVault,\n  claimPosVaultWithdraw,\n  getLPVaultData,\n  getLPVaultDataUser,\n  approveLPVault,\n  stakeLPVault,\n  unstakeLPVault,\n  claimLPVaultYield,\n  getZoVaultData,\n  getZoVaultDataUser,\n  claimZoVaultYield,\n  stakeZoVault,\n  unstakeZoVault\n};\n\n","import evmLib from './evmLib';\n\nconst {\n  SERVER,\n  CHAIN_ID\n} = require('./config');\n\nconst ethers = require(\"ethers\").ethers;\nconst moment = require('moment');\nconst io = require('socket.io-client');\nconst feathers = require('@feathersjs/client');\n\nconst socket = io(SERVER);\nconst client = feathers();\n\nclient.configure(feathers.socketio(socket, {\n  timeout: 180000\n}));\nclient.configure(feathers.authentication());\n\nconst swapDataService = client.service('swap-data');\nconst sessionDataService = client.service('session-data');\n\nasync function getPublicData() {\n  let sd = await swapDataService.find({ query: { $limit: 0 } });\n  sd = await swapDataService.find({\n    query: {\n      chainId: CHAIN_ID,\n      $limit: sd.total,\n      $sort: {\n        ts: -1\n      }\n    }\n  });\n\n  let sddata = [];\n  let skip = 0;\n  while (sddata.length < sd.total) {\n    const result = await swapDataService.find({\n      query: {\n        chainId: CHAIN_ID,\n        $limit: 10,\n        $skip: skip,\n        $sort: {\n          ts: -1\n        }\n      }\n    });\n\n    sddata = sddata.concat(result.data);\n    skip += 10;\n  }\n\n  const tsNow = moment().unix();\n  const tsd1 = tsNow - (3600 * 24);\n  const tsd7 = tsNow - (3600 * 24 * 7);\n  const tsd30 = tsNow - (3600 * 24 * 30);\n  const tsd365 = tsNow - (3600 * 24 * 365);\n\n  let currentPrice = ethers.BigNumber.from(0);\n  if (sd.total > 0) currentPrice = ethers.BigNumber.from(sd.data[0].price);\n  let ath = ethers.BigNumber.from(currentPrice);\n  let atl = ethers.BigNumber.from(currentPrice);\n  let priced1 = false;\n  let priced7 = false;\n  let priced30 = false;\n  let priced365 = false;\n  // const sddata = sd.data;\n  for (let i = 0; i < sddata.length; i++) {\n    const row = sddata[i];\n    const price = ethers.BigNumber.from(row.price);\n    const ts = row.ts;\n    if (price.gt(ath)) ath = price;\n    if (price.lt(atl)) atl = price;\n    if (!priced1 && ts <= tsd1) priced1 = price;\n    if (!priced7 && ts <= tsd7) priced7 = price;\n    if (!priced30 && ts <= tsd30) priced30 = price;\n    if (!priced365 && ts <= tsd365) priced365 = price;\n  }\n\n\n  function calcPctg(startP, endP) {\n    if (startP.gt(0)) {\n      let pctg = (endP.sub(startP)).mul(100).div(startP);\n      return pctg.toNumber();\n    }\n    return 0;\n  }\n\n  const pctg1 = priced1 ? calcPctg(priced1, currentPrice) : '-';\n  const pctg7 = priced7 ? calcPctg(priced7, currentPrice) : '-';\n  const pctg30 = priced30 ? calcPctg(priced30, currentPrice) : '-';\n  const pctg365 = priced365 ? calcPctg(priced365, currentPrice) : '-';\n\n  const athPctg = calcPctg(ath, currentPrice);\n  const atlPctg = calcPctg(atl, currentPrice);\n\n  let ssd = await sessionDataService.find({ query: { chainId: CHAIN_ID } });\n  let sessions = [];\n  let avgProfitPerShare = false;\n\n  let ssData = {};\n\n  if (ssd.total > 0) {\n    ssData = ssd.data[0];\n    const history = ssd.data[0].history\n\n    const divider = history.length;\n    let total = ethers.BigNumber.from(0);\n\n    for (let i = 0; i < history.length; i++) {\n      const h = history[i];\n\n      sessions.unshift({\n        turn: h.turn,\n        session: moment.unix(h.createdAt).format('YYYY/MM/DD HH:mm'),\n        generated: evmLib.wei2eth(h.totalGenerated),\n        totalShare: h.totalShare,\n        generatedPerShare: evmLib.wei2eth(h.profitPerShare),\n      });\n\n      total = total.add(h.profitPerShare);\n    }\n\n    avgProfitPerShare = divider > 0 ? evmLib.wei2eth(total.div(divider)) : 0.0;\n\n    sessions.unshift({\n      turn: ssd.data[0].currentTurn,\n      session: 'On Going',\n      generated: '-',\n      totalShare: ssd.data[0].currentTotalShare,\n      generatedPerShare: '-'\n    })\n  }\n\n  const ret = {\n    currentPrice: evmLib.wei2eth(currentPrice.toString()),\n    athPrice: evmLib.wei2eth(ath.toString()),\n    atlPrice: evmLib.wei2eth(atl.toString()),\n    pctg1,\n    pctg7,\n    pctg30,\n    pctg365,\n    athPctg,\n    atlPctg,\n    sessions,\n    avgProfitPerShare,\n    nftMinted: ssData.nftMinted,\n    nftGenerated: evmLib.wei2eth(ssData.nftGenerated)\n  };\n\n\n  return ret;\n}\n\nexport default {\n  // module.exports = {\n  swapDataService,\n  getPublicData\n};\n\n","const Toastify = require('toastify-js');\nrequire('toastify-js/src/toastify.css');\n\nasync function showToast(msg) {\n  Toastify({\n    backgroundColor: 'black',\n    gravity: 'bottom', // `top` or `bottom`\n    position: 'center', // `left`, `center` or `right`\n    text: msg\n  }).showToast();\n}\n\nasync function delay(ms) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  })\n}\n\n// async function getLogger() {\n//   return console;\n// }\n\nasync function getStorageValue(key) {\n  const val = window.localStorage.getItem(key);\n  return val;\n}\n\nasync function setStorageValue(key, val) {\n  window.localStorage.setItem(key, val);\n}\n\nasync function clearStorageValue() {\n  window.localStorage.clear();\n}\n\nfunction openUrl(url) {\n  const win = window.open(url, '_blank');\n  win.focus();\n}\n\nfunction openUrlHere(url) {\n  window.open(url, '_self');\n}\n\nfunction remainingText(seconds) {\n  let secs = seconds;\n  let numDays = Math.floor(secs / (3600 * 24));\n  secs = secs - (numDays * 3600 * 24);\n  let numHours = Math.floor(secs / 3600);\n  secs = secs - (numHours * 3600);\n  let numMinute = Math.floor(secs / 60);\n  secs = secs - (numMinute * 60);\n  let numSeconds = secs;\n  let ret = '';\n  if (numDays > 0) ret += (numDays + ' days ');\n  if (numHours > 0) ret += (numHours + ' hours ');\n  if (numMinute > 0) ret += (numMinute + ' minutes ');\n  if (numSeconds > 0) ret += (numSeconds + ' seconds');\n  return ret;\n}\n\nfunction shortHex(hexStr) {\n  const ret = hexStr.slice(0, 9) + '...' + hexStr.slice(hexStr.length - 7);\n  return ret;\n}\n\nfunction to2digit(val) {\n  return Math.floor(Number(val) * 100) / 100;\n}\n\nfunction to5digit(val) {\n  return Math.floor(Number(val) * 100000) / 100000;\n}\n\nexport default {\n  // module.exports = {\n  delay,\n  openUrl,\n  openUrlHere,\n  showToast,\n  getStorageValue,\n  setStorageValue,\n  clearStorageValue,\n  remainingText,\n  shortHex,\n  to2digit,\n  to5digit\n};\n\n","import React from 'react';\nimport { Modal, Button, Typography, Spin, Space } from 'antd';\nimport Lib from '../Lib';\n\nconst { Text } = Typography;\nconst {\n  EXPLORER_TX\n} = require('../config');\n\nclass TXAlert extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n\n  async componentDidMount() {\n\n  }\n\n  render() {\n    const wording = this.props.txStatus ? this.props.txStatus.toUpperCase() : 'OK';\n    let linkToExplorer = <Spin />;\n    if (this.props.txHash) {\n      const txHash = this.props.txHash;\n      const shortTxHash = Lib.shortHex(txHash);\n      const url = EXPLORER_TX + txHash;\n      linkToExplorer = (\n        <Space direction='vertical' align='center'>\n          <Text>{shortTxHash}</Text>\n          <Button type='link' onClick={() => Lib.openUrl(url)}>VIEW ON EXPLORER</Button>\n        </Space>\n      );\n    }\n\n    return (\n      <Modal title={'TRANSACTION'} visible={this.props.showTxPopup} centered={true} footer={[\n        <Button key=\"back\" onClick={() => this.props.onBack()}>\n          {wording}\n        </Button>,\n      ]}>\n        <div style={{ textAlign: 'center' }}>\n          {linkToExplorer}\n        </div>\n      </Modal>\n    );\n  }\n}\n\nexport default TXAlert;\n","import React from 'react';\nimport { Modal, Collapse, Button, Row, Col, Card, Typography, Spin, Divider, Input, Image } from 'antd';\nimport evmLib from '../evmLib';\nimport Lib from '../Lib';\nimport moment from 'moment';\nimport TXAlert from './TXAlert';\n\nconst { Panel } = Collapse;\nconst { Title } = Typography;\nconst {\n  LPVAULT_LINK,\n  LP_LINK\n} = require('../config');\n\n\nclass LPVault extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stakeAmount: ''\n    };\n  }\n\n  async componentDidMount() {\n    const blockchainTime = await evmLib.getBlockchainTime();\n    this.setState({ blockchainTime });\n\n    await this.refreshVaultData();\n  }\n\n  async getSnapshotBeforeUpdate(prevProps, prevState) {\n    const prevMetamask = prevProps.metamask;\n    const nextMetamask = this.props.metamask;\n\n    if (!prevMetamask && nextMetamask) {\n      await this.refreshVaultDataUser();\n    }\n  }\n\n  componentDidUpdate() {\n    return true;\n  }\n\n  modalError(msg) {\n    Modal.error({\n      title: 'Vault Error',\n      centered: true,\n      maskClosable: true,\n      content: msg,\n      okType: 'outline'\n    });\n  }\n\n  async refreshVaultData() {\n    this.setState({ vaultData: null });\n    const vaultData = await evmLib.getLPVaultData();\n    this.setState({ vaultData });\n  }\n\n  async refreshVaultDataUser() {\n    this.setState({ vaultDataUser: null });\n    const wallet = this.props.metamask.getSigner();\n    wallet.address = await wallet.getAddress();\n    const vaultDataUser = await evmLib.getLPVaultDataUser(wallet);\n    this.setState({ vaultDataUser });\n  }\n\n  componentWillUnmount() {\n  }\n\n  async claimVaultYield() {\n    try {\n      const signer = this.props.metamask.getSigner();\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      let tx = await evmLib.claimLPVaultYield(signer);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshVaultDataUser();\n    } catch (err) {\n      console.error(err);\n      this.setState({ txStatus: 'fail' });\n    }\n  }\n\n  async approveVault() {\n    try {\n      const signer = this.props.metamask.getSigner();\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      let tx = await evmLib.approveLPVault(signer);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshVaultDataUser();\n    } catch (err) {\n      console.error(err);\n      this.setState({ txStatus: 'fail' });\n    }\n  }\n\n  async stakeVault() {\n    const amount = this.state.stakeAmount;\n    const ownedLP = this.state.vaultDataUser.ownedLP;\n    if (!amount || amount === '')\n      return this.modalError('Please enter amount to stake/unstake.');\n    if (Number(amount) > Number(ownedLP))\n      return this.modalError('Wallet dont have enough CFX/TXT LP. Get CFX/TXT LP on SWAPPI.');\n    if (this.state.vaultDataUser && Number(this.state.vaultDataUser.unclaimedReward) > 0)\n      return this.modalError('Before stake/unstake, please claim unclaimed yield');\n\n    try {\n      const signer = this.props.metamask.getSigner();\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      let tx = await evmLib.stakeLPVault(signer, amount);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshVaultDataUser();\n    } catch (err) {\n      console.error(err);\n      this.setState({ txStatus: 'fail' });\n    }\n  }\n\n  async unstakeVault() {\n    const amount = this.state.stakeAmount;\n    if (!amount || amount === '')\n      return this.modalError('Please enter amount to stake/unstake.');\n    if (this.state.vaultDataUser && Number(amount) > Number(this.state.vaultDataUser.numStake))\n      return this.modalError('Not enough CFX/TXT LP to unstake. Stake CFX/TXT LP first.');\n    if (this.state.vaultDataUser && Number(this.state.vaultDataUser.unclaimedReward) > 0)\n      return this.modalError('Before stake/unstake, please claim unclaimed yield');\n\n    try {\n      const signer = this.props.metamask.getSigner();\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      let tx = await evmLib.unstakeLPVault(signer, amount);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshVaultDataUser();\n    } catch (err) {\n      console.error(err);\n      this.setState({ txStatus: 'fail' });\n    }\n  }\n\n  renderAPYCalc() {\n    const d = this.state.vaultData;\n    const priceToken = Lib.to5digit(d.priceToken);\n    const priceLP = Lib.to5digit(d.priceLP);\n    const dailyInterest = Lib.to5digit(d.dailyInterest);\n    const dailyInterestCFX = Lib.to5digit(d.dailyInterestCFX);\n    const interest = Lib.to5digit(d.interest);\n    const apyCalc1 = Lib.to5digit(d.apyCalc1);\n    const apyCalc2 = Lib.to5digit(d.apyCalc2);\n\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <div>Price in CFX:</div>\n        <div>1 TXT = {priceToken} CFX</div>\n        <div>1 LP = {priceLP} CFX</div>\n        <div>Latest Daily Yield/Stake:</div>\n        <div>{dailyInterest} TXT/1LP = {dailyInterestCFX} CFX/1LP</div>\n        <div>Latest Daily Yield:</div>\n        <div>{dailyInterestCFX} CFX/{priceLP} CFX = {interest}</div>\n        <div>APY Calculation:</div>\n        <div>(1 + {interest})^365 - 1 * 100%</div>\n        <div>{apyCalc1} - 1  * 100%</div>\n        <div>{apyCalc2} * 100%</div>\n      </div>\n    );\n  }\n\n  render() {\n    const title = 'LP VAULT';\n    const tokenName = 'CFX/TXT LP';\n    const yieldName = 'TXT';\n    const infoMsg1 = 'Optimize your TXT revenue. Provide liquidity for CFX/TXT in SWAPPI to get CFX/TXT LP token. Stake them to earn more TXT.';\n    const infoMsg2 = 'Provide liquidity in SWAPPI to get CFX/TXT LP token';\n    const unstakeEnableTime = '24 hours';\n    const imgUrl = \"https://res.cloudinary.com/dey55ubjm/image/upload/v1660552313/tbotx/CFXTXT.png\";\n\n    let apyInfo = <Spin />;\n    let numStaked = '-';\n    let unstakeAllowDate = '-';\n    let nextRewardAvailable = '-';\n    let unclaimedYield = '-';\n    let noUserData = true;\n    let enableUnstake = false;\n    let numOwned = '-';\n    let approved = false;\n    let apyCalc = null;\n    let enableMax = false;\n\n    const now = this.state.blockchainTime ? moment.unix(this.state.blockchainTime) : moment();\n    let info = (\n      <Col xs={24}>\n        <Collapse accordion>\n          <Panel header=\"Vault Information\">\n            <Row gutter={[8, 8]}>\n\n              <Col xs={24}>\n                <p>{infoMsg1}</p>\n                <p>{infoMsg2}</p>\n              </Col>\n              <Col xs={24}>\n                <Button type='outline' block onClick={() => Lib.openUrl(LPVAULT_LINK)}>VERIFY LPVAULT CONTRACT</Button>\n              </Col>\n              <Col xs={24}>\n                <Button type='outline' block onClick={() => Lib.openUrl(LP_LINK)}>GET CFX/TXT LP</Button>\n              </Col>\n            </Row>\n          </Panel>\n        </Collapse>\n      </Col>\n    );\n\n    if (this.state.vaultData) {\n      const d = this.state.vaultData;\n      apyInfo = <Title level={4}>APY {Lib.to2digit(d.apy)}%</Title>;\n      nextRewardAvailable = moment.unix(d.nextRewardAvailable).format('DD/MM/YY HH:mm:ss');\n      apyCalc = this.renderAPYCalc();\n\n      if (this.state.vaultDataUser) {\n        noUserData = false;\n        const du = this.state.vaultDataUser;\n        numOwned = du.ownedLP;\n        numStaked = du.numStake;\n        unstakeAllowDate = moment.unix(du.unstakeTime).format('DD/MM/YY HH:mm:ss');\n        unclaimedYield = Lib.to5digit(du.unclaimedReward);\n        enableUnstake = now.isAfter(moment.unix(du.unstakeTime)) && Number(numStaked) > 0;\n        approved = du.approved;\n        enableMax = (approved && Number(numOwned) > 0);\n      }\n    }\n\n    let disableBtnYieldClaim = true;\n    let txtYield = <div>&nbsp;</div>;\n\n    if (Number(numStaked) > 0 && Number(unclaimedYield) > 0) {\n      disableBtnYieldClaim = false;\n      txtYield = (\n        <div style={{ textAlign: 'center' }}>\n          Unclaimed Yield: {unclaimedYield} {yieldName}\n        </div>\n      );\n    } else if (nextRewardAvailable !== '-') {\n      txtYield = (\n        <div style={{ textAlign: 'center' }}>\n          Yield Available: {nextRewardAvailable}\n        </div>\n      );\n    }\n\n    let txtUnstakeTime = (\n      <div style={{ textAlign: 'center' }}>\n        <div>Unstake will be enable {unstakeEnableTime} after last Stake</div>\n      </div>\n    );\n\n    if (Number(numStaked) > 0 && !enableUnstake) {\n      txtUnstakeTime = (\n        <div style={{ textAlign: 'center' }}>\n          <div>Unstake allowed after {unstakeAllowDate}</div>\n        </div>\n      );\n    }\n\n    let btnApprove = (\n      <Col xs={24}>\n        <Button disabled={noUserData || approved} type='primary' block onClick={() => this.approveVault()}>APPROVE</Button>\n      </Col>\n    )\n\n    let btnStake;\n    let btnUnstake;\n    if (approved) {\n      btnApprove = null;\n      btnStake = (\n        <Col xs={12}>\n          <Button disabled={noUserData} type='primary' block onClick={() => this.stakeVault()}>STAKE</Button>\n        </Col>\n      );\n      btnUnstake = (\n        <Col xs={12}>\n          <Button disabled={noUserData || !enableUnstake} type='primary' block onClick={() => this.unstakeVault()}>UNSTAKE</Button>\n        </Col>\n      );\n    }\n\n    let calcInfo = (\n      <Col xs={24} sm={24}>\n        <div style={{ textAlign: 'center' }}>\n          {apyCalc}\n          <div>&nbsp;</div>\n          {apyInfo}\n          <div><Button type=\"link\" onClick={() => this.setState({ showAPYCalc: false })}>HIDE APY CALCULATION</Button></div>\n        </div>\n      </Col>\n    );\n\n    if (!this.state.showAPYCalc) {\n      calcInfo = (\n        <Col xs={24} sm={24}>\n          <div style={{ textAlign: 'center' }}>\n            <Image\n              height='64px'\n              src={imgUrl}\n            />\n            <div>&nbsp;</div>\n            <div>Stake {tokenName} Earn {yieldName}</div>\n            {apyInfo}\n            <div><Button type=\"link\" onClick={() => this.setState({ showAPYCalc: true })}>SHOW APY CALCULATION</Button></div>\n          </div>\n        </Col>\n      );\n    }\n\n    return (\n      <Card title={\n        <Title level={4}>{title}</Title>\n      } style={{ height: '100%' }} headStyle={{ textAlign: 'center' }}>\n        <TXAlert showTxPopup={this.state.showTxPopup} txStatus={this.state.txStatus} txHash={this.state.txHash}\n          onBack={() => this.setState({ showTxPopup: false })} />\n        <Row gutter={[8, 8]}>\n          {info}\n          <div>&nbsp;</div>\n        </Row>\n        <Row gutter={[8, 8]}>\n          {calcInfo}\n        </Row>\n        <Divider />\n        <Row gutter={[8, 8]}>\n          <Col xs={24} sm={24}>\n            <div style={{ textAlign: 'center' }}>\n              <div>Staked: {numStaked} {tokenName}</div>\n              {txtUnstakeTime}\n              Owned: {numOwned} {tokenName}\n            </div>\n          </Col>\n          <Col xs={24}>\n            <div style={{ display: 'flex' }}>\n              <div style={{ flex: 1 }}>\n                <Input disabled={!approved} addonAfter={tokenName} placeholder='Enter amount to stake/unstake'\n                  value={this.state.stakeAmount}\n                  onChange={(e) => this.setState({ stakeAmount: e.target.value })}\n                />\n              </div>\n              <div>\n                <Button disabled={!enableMax} type=\"link\" onClick={() => this.setState({ stakeAmount: ('' + numOwned) })}>MAX</Button>\n              </div>\n            </div>\n          </Col>\n          {btnApprove}\n          {btnStake}\n          {btnUnstake}\n          <Col xs={24}>\n            <Divider />\n            <div style={{ textAlign: 'center' }}>\n              {txtYield}\n            </div>\n          </Col>\n          <Col xs={24}>\n            <Button disabled={noUserData || disableBtnYieldClaim} type='primary' block onClick={() => this.claimVaultYield()}>CLAIM</Button>\n          </Col>\n        </Row>\n      </Card >\n    );\n  }\n\n}\n\nexport default LPVault;\n","import React from 'react';\nimport { Modal, Collapse, Button, Row, Col, Card, Typography, Spin, Divider, Input, Image, Space, Table } from 'antd';\nimport evmLib from '../evmLib';\nimport Lib from '../Lib';\nimport moment from 'moment';\nimport TXAlert from './TXAlert';\n\nconst { Panel } = Collapse;\nconst { Title } = Typography;\nconst {\n  VAULT_LINK,\n  VAULTREWARD_LINK,\n  TRADE_LINK\n} = require('../config');\n\n\nclass PoSVault extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stakeAmount: ''\n    };\n  }\n\n  async componentDidMount() {\n    const blockchainTime = await evmLib.getBlockchainTime();\n    this.setState({ blockchainTime });\n\n    await this.refreshVaultData();\n  }\n\n  async getSnapshotBeforeUpdate(prevProps, prevState) {\n    const prevMetamask = prevProps.metamask;\n    const nextMetamask = this.props.metamask;\n\n    if (!prevMetamask && nextMetamask) {\n      await this.refreshVaultDataUser();\n    }\n  }\n\n  componentDidUpdate() {\n    return true;\n  }\n\n  modalError(msg) {\n    Modal.error({\n      title: 'Vault Error',\n      centered: true,\n      maskClosable: true,\n      content: msg,\n      okType: 'outline'\n    });\n  }\n\n  async refreshVaultData() {\n    this.setState({ vaultData: null });\n    const vaultData = await evmLib.getPosVaultData();\n    this.setState({ vaultData });\n  }\n\n  async refreshVaultDataUser() {\n    this.setState({ vaultDataUser: null });\n    const wallet = this.props.metamask.getSigner();\n    wallet.address = await wallet.getAddress();\n    const vaultDataUser = await evmLib.getPosVaultDataUser(wallet);\n    this.setState({ vaultDataUser });\n  }\n\n  componentWillUnmount() {\n  }\n\n  async claimVaultYield() {\n    try {\n      const signer = this.props.metamask.getSigner();\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      let tx = await evmLib.claimPosVaultYield(signer);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshVaultDataUser();\n    } catch (err) {\n      console.error(err);\n      this.setState({ txStatus: 'fail' });\n    }\n  }\n\n  async approveVault() {\n    try {\n      const signer = this.props.metamask.getSigner();\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      let tx = await evmLib.approveLPVault(signer);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshVaultDataUser();\n    } catch (err) {\n      console.error(err);\n      this.setState({ txStatus: 'fail' });\n    }\n  }\n\n  async stakeVault() {\n    const wallet = this.props.metamask.getSigner();\n    wallet.address = await wallet.getAddress();\n\n    // 'Before stake/unstake, please claim unclaimed yield.'\n    // 'Amount is not multiples of 1000 CFX'\n    // 'Wallet dont have enough CFX. Buy CFX at SWAPPI.'\n    const amount = this.state.stakeAmount;\n    if (!amount || amount === '')\n      return this.modalError('Please enter amount to stake/unstake.');\n\n    const amountWei = evmLib.eth2wei(amount);\n    const balance = await evmLib.getWalletBalance(wallet.address);\n\n    if (Number(amount) < 1000)\n      return this.modalError('Currently PHXPool require minimum stake of 1000 CFX.');\n    if (this.state.vaultDataUser && Number(this.state.vaultDataUser.unclaimedReward) > 0)\n      return this.modalError('Before stake/unstake, please claim unclaimed yield');\n    if (balance.lt(amountWei))\n      return this.modalError('Wallet dont have enough CFX. Buy CFX at SWAPPI.');\n    if (Number(amount) - (Math.floor(Number(amount) / 1000) * 1000) > 0)\n      return this.modalError('Amount is not multiples of 1000 CFX.');\n\n    try {\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      let tx = await evmLib.stakePosVault(wallet, amount);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshVaultDataUser();\n    } catch (err) {\n      console.error(err);\n      this.setState({ txStatus: 'fail' });\n    }\n\n  }\n\n  async unstakeVault() {\n    const wallet = this.props.metamask.getSigner();\n    wallet.address = await wallet.getAddress();\n\n    // 'Before stake/unstake, please claim unclaimed yield.'\n    // 'Amount is not multiples of 1000 CFX'\n    // 'Not enough CFX to unstake. Stake CFX first.' \n    const amount = this.state.stakeAmount;\n    if (!amount || amount === '')\n      return this.modalError('Please enter amount to stake/unstake.');\n\n    if (this.state.vaultDataUser && Number(this.state.vaultDataUser.unclaimedReward) > 0)\n      return this.modalError('Before stake/unstake, please claim unclaimed yield');\n    if (Number(amount) - (Math.floor(Number(amount) / 1000) * 1000) > 0)\n      return this.modalError('Amount is not multiples of 1000 CFX.');\n    if (this.state.vaultDataUser && Number(amount) > Number(this.state.vaultDataUser.numStake))\n      return this.modalError('Not enough CFX to unstake. Stake CFX first.');\n\n\n    try {\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      let tx = await evmLib.unstakePosVault(wallet, amount);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshVaultDataUser();\n    } catch (err) {\n      console.error(err);\n      this.setState({ txStatus: 'fail' });\n    }\n  }\n\n  async claimWithdrawRequest(index) {\n    try {\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      let tx = await evmLib.claimPosVaultWithdraw(this.props.metamask.getSigner(), index);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshVaultDataUser();\n    } catch (err) {\n      console.error(err);\n      this.setState({ txStatus: 'fail' });\n    }\n  }\n\n  renderAPYCalc() {\n    const d = this.state.vaultData;\n    const priceToken = Lib.to5digit(d.priceToken);\n    const dailyInterest = Lib.to5digit(d.dailyInterest);\n    const dailyInterest1000Cfx = Lib.to5digit(d.dailyInterest1000Cfx);\n    const dailyInterest1Cfx = Lib.to5digit(d.dailyInterest1Cfx);\n    const apyCalc1 = Lib.to5digit(d.apyCalc1);\n    const apyCalc2 = Lib.to5digit(d.apyCalc2);\n\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <div>Price in CFX:</div>\n        <div>1 TXT = {priceToken} CFX</div>\n        <div>Avg. Daily Yield/Stake: {dailyInterest} TXT/Stake</div>\n        <div>{dailyInterest1000Cfx} CFX/Stake = {dailyInterest1000Cfx} CFX/1000 CFX = {dailyInterest1Cfx}</div>\n        <div>APY Calculation:</div>\n        <div>(1 + {dailyInterest1Cfx})^365 - 1 * 100%</div>\n        <div>{apyCalc1} - 1  * 100%</div>\n        <div>{apyCalc2} * 100%</div>\n      </div>\n    );\n  }\n\n  renderPendingUnstake() {\n    const now = this.state.blockchainTime ? moment.unix(this.state.blockchainTime) : moment();\n    const du = this.state.vaultDataUser;\n    const dataSource = du.pendingWithdraw;\n    const columns = [\n      {\n        title: (<div style={{ textAlign: 'center' }}>DATA</div>),\n        dataIndex: 'data',\n        render: (text, record) => {\n          // wrIndex,\n          // withdrawAmount\n          // deadline\n          const wrIndex = record.wrIndex;\n          const withdrawAmount = record.withdrawAmount;\n          const deadline = moment.unix(record.deadline).format('DD/MM/YY HH:mm:ss');\n          let enable = now.isAfter(moment.unix(record.deadline));\n\n          return (\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n              <Space direction='vertical' align='center'>\n                <div style={{ textAlign: 'center' }}>{withdrawAmount} CFX</div>\n                <div style={{ textAlign: 'center' }}>Can be Claimed After:</div>\n                <div style={{ textAlign: 'center' }}>{deadline}</div>\n                <Button disabled={!enable} type='primary' onClick={() => this.claimWithdrawRequest(wrIndex)}>CLAIM</Button>\n              </Space>\n            </div>\n          );\n        },\n        responsive: ['xs']\n      },\n      {\n        title: 'Amount CFX',\n        dataIndex: 'withdrawAmount',\n        key: 'withdrawAmount',\n        responsive: ['sm']\n      },\n      {\n        title: 'Can be Claimed After',\n        dataIndex: 'deadline',\n        key: 'deadline',\n        responsive: ['sm'],\n        render: (text, record) => {\n          const deadline = moment.unix(record.deadline).format('DD/MM/YY HH:mm:ss');\n          return (\n            deadline\n          )\n        },\n      },\n      {\n        title: 'Action',\n        render: (text, record) => {\n          const deadline = record.deadline;\n          const wrIndex = record.wrIndex;\n          const enable = now.isAfter(moment.unix(deadline));\n          return (\n            <Space size=\"middle\">\n              <Button disabled={!enable} type='primary' onClick={() => this.claimWithdrawRequest(wrIndex)}>CLAIM</Button>\n            </Space>\n          )\n        },\n        responsive: ['sm']\n      },\n    ];\n\n    return (\n      <Col xs={24} sm={24}>\n        <Divider />\n        <div style={{ textAlign: 'center' }}>\n          <div>Pending Unstake</div>\n          <div>&nbsp;</div>\n        </div>\n        <Table bordered dataSource={dataSource} columns={columns} />\n      </Col>\n    );\n  }\n\n  render() {\n    const title = 'PoS VAULT';\n    const tokenName = 'CFX';\n    const yieldName = 'TXT';\n    const infoMsg1 = 'PoS VAULT is yield optimizer for Conflux PoS Pool. The vault currently optimize yield on PHXVerse Pool. At this time required minimal staking is 1000 CFX. Important: PHX Pospool smartcontract (verified in confluxscan) still use locking/unlocking periods of 7 days, but conflux hardfork already change staking parameter to 13/1 for locking/unlocking period. To make PoS VAULT optimizer work without problem, unstake button will be enable after 14 days and pending withdraw can be claimed after 8 days.';\n    const infoMsg2 = 'Trade CFX or TXT in SWAPPI';\n    const unstakeEnableTime = '14 days';\n    const imgUrl = 'https://res.cloudinary.com/dey55ubjm/image/upload/v1660552313/tbotx/CFX.png';\n\n    let apyInfo = <Spin />;\n    let numStaked = '-';\n    let unstakeAllowDate = '-';\n    let nextRewardAvailable = '-';\n    let unclaimedYield = '-';\n    let noUserData = true;\n    let enableUnstake = false;\n    let numOwned = '-';\n    let approved = true;\n    let apyCalc = null;\n    let dataSource = [];\n    let enableMax = false;\n\n    const now = this.state.blockchainTime ? moment.unix(this.state.blockchainTime) : moment();\n    let info = (\n      <Col xs={24}>\n        <Collapse accordion>\n          <Panel header=\"Vault Information\">\n            <Row gutter={[8, 8]}>\n              <Col xs={24}>\n                <p>{infoMsg1}</p>\n                <p>{infoMsg2}</p>\n              </Col>\n              <Col xs={24}>\n                <Button type='outline' block onClick={() => Lib.openUrl('https://pospool.phxverse.com')}>VISIT PHXVERSE POOL</Button>\n              </Col>\n              <Col xs={24}>\n                <Button type='outline' block onClick={() => Lib.openUrl(VAULT_LINK)}>VERIFY POSVAULT CONTRACT</Button>\n              </Col>\n              <Col xs={24}>\n                <Button type='outline' block onClick={() => Lib.openUrl(VAULTREWARD_LINK)}>VERIFY POSREWARD CONTRACT</Button>\n              </Col>\n              <Col xs={24}>\n                <Button type='outline' block onClick={() => Lib.openUrl(TRADE_LINK)}>TRADE CFX OR TXT</Button>\n              </Col>\n            </Row>\n\n          </Panel>\n          \n        </Collapse>\n      </Col>\n    );\n\n    if (this.state.vaultData) {\n      const d = this.state.vaultData;\n      apyInfo = <Title level={4}>APY {Lib.to2digit(d.apy)}%</Title>;\n      nextRewardAvailable = moment.unix(d.nextRewardAvailable).format('DD/MM/YY HH:mm:ss');\n      apyCalc = this.renderAPYCalc();\n\n      if (this.state.vaultDataUser) {\n        noUserData = false;\n        const du = this.state.vaultDataUser;\n        numOwned = du.ownedCFX;\n        numStaked = du.numStake;\n        unstakeAllowDate = moment.unix(du.unstakeTime).format('DD/MM/YY HH:mm:ss');\n        unclaimedYield = Lib.to5digit(du.unclaimedReward);\n        enableUnstake = now.isAfter(moment.unix(du.unstakeTime)) && Number(numStaked) > 0;\n        dataSource = du.pendingWithdraw;\n        enableMax = (Number(numOwned) > 0)\n      }\n    }\n\n    let pendingUnstake;\n    if (dataSource && dataSource.length > 0) {\n      pendingUnstake = this.renderPendingUnstake();\n    }\n\n    let disableBtnYieldClaim = true;\n    let txtYield = <div>&nbsp;</div>;\n\n    if (Number(numStaked) > 0 && Number(unclaimedYield) > 0) {\n      disableBtnYieldClaim = false;\n      txtYield = (\n        <div style={{ textAlign: 'center' }}>\n          Unclaimed Yield: {unclaimedYield} {yieldName}\n        </div>\n      );\n    } else if (nextRewardAvailable !== '-') {\n      txtYield = (\n        <div style={{ textAlign: 'center' }}>\n          Yield Available: {nextRewardAvailable}\n        </div>\n      );\n    }\n\n    if (Number(numStaked) > 0 && Number(unclaimedYield) > 0) {\n      disableBtnYieldClaim = false;\n    }\n\n    let txtUnstakeTime = (\n      <div style={{ textAlign: 'center' }}>\n        <div>Unstake will be enable {unstakeEnableTime} after last Stake</div>\n      </div>\n    );\n\n    if (Number(numStaked) > 0 && !enableUnstake) {\n      txtUnstakeTime = (\n        <div style={{ textAlign: 'center' }}>\n          <div>Unstake allowed after {unstakeAllowDate}</div>\n        </div>\n      );\n    }\n\n    let btnStake;\n    let btnUnstake;\n    if (approved) {\n      btnStake = (\n        <Col xs={12}>\n          <Button disabled={noUserData} type='primary' block onClick={() => this.stakeVault()}>STAKE</Button>\n        </Col>\n      );\n      btnUnstake = (\n        <Col xs={12}>\n          <Button disabled={noUserData || !enableUnstake} type='primary' block onClick={() => this.unstakeVault()}>UNSTAKE</Button>\n        </Col>\n      );\n    }\n\n    let calcInfo = (\n      <Col xs={24} sm={24}>\n        <div style={{ textAlign: 'center' }}>\n          {apyCalc}\n          <div>&nbsp;</div>\n          {apyInfo}\n          <div><Button type=\"link\" onClick={() => this.setState({ showAPYCalc: false })}>HIDE APY CALCULATION</Button></div>\n        </div>\n      </Col>\n    );\n\n    if (!this.state.showAPYCalc) {\n      calcInfo = (\n        <Col xs={24} sm={24}>\n          <div style={{ textAlign: 'center' }}>\n            <Image\n              height='64px'\n              src={imgUrl}\n            />\n            <div>&nbsp;</div>\n            <div>Stake {tokenName} Earn {yieldName}</div>\n            {apyInfo}\n            <div><Button type=\"link\" onClick={() => this.setState({ showAPYCalc: true })}>SHOW APY CALCULATION</Button></div>\n          </div>\n        </Col>\n      );\n    }\n\n    return (\n      <Card title={\n        <Title level={4}>{title}</Title>\n      } style={{ height: '100%' }} headStyle={{ textAlign: 'center' }}>\n        <TXAlert showTxPopup={this.state.showTxPopup} txStatus={this.state.txStatus} txHash={this.state.txHash}\n          onBack={() => this.setState({ showTxPopup: false })} />\n        <Row gutter={[8, 8]}>\n          {info}\n          <div>&nbsp;</div>\n        </Row>\n        <Row gutter={[8, 8]}>\n          {calcInfo}\n        </Row>\n        <Divider />\n        <Row gutter={[8, 8]}>\n          <Col xs={24} sm={24}>\n            <div style={{ textAlign: 'center' }}>\n              <div>Staked: {numStaked} {tokenName}</div>\n              {txtUnstakeTime}\n              Owned: {numOwned} {tokenName}\n            </div>\n          </Col>\n          <Col xs={24}>\n            <div style={{ display: 'flex' }}>\n              <div style={{ flex: 1 }}>\n                <Input disabled={!approved} addonAfter={tokenName} placeholder='Enter amount to stake/unstake'\n                  value={this.state.stakeAmount}\n                  onChange={(e) => this.setState({ stakeAmount: e.target.value })}\n                />\n              </div>\n              <div>\n                <Button disabled={!enableMax} type=\"link\" onClick={() => this.setState({ stakeAmount: ('' + numOwned) })}>MAX</Button>\n              </div>\n            </div>\n          </Col>\n          {btnStake}\n          {btnUnstake}\n          <Col xs={24}>\n            <Divider />\n            {txtYield}\n          </Col>\n          <Col xs={24}>\n            <Button disabled={noUserData || disableBtnYieldClaim} type='primary' block onClick={() => this.claimVaultYield()}>CLAIM</Button>\n          </Col>\n          {pendingUnstake}\n        </Row>\n      </Card >\n    );\n  }\n\n}\n\nexport default PoSVault;\n","import React from 'react';\nimport { Modal, Collapse, Button, Row, Col, Card, Typography, Spin, Divider, Input, Image } from 'antd';\nimport evmLib from '../evmLib';\nimport Lib from '../Lib';\nimport moment from 'moment';\nimport TXAlert from './TXAlert';\n\nconst { Panel } = Collapse;\nconst { Title } = Typography;\nconst {\n  TRADE_LINK,\n  ZV_LINK,\n  ZVR_LINK\n} = require('../config');\n\n\nclass ZoVault extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stakeAmount: ''\n    };\n  }\n\n  async componentDidMount() {\n    const blockchainTime = await evmLib.getBlockchainTime();\n    this.setState({ blockchainTime });\n\n    await this.refreshVaultData();\n  }\n\n  async getSnapshotBeforeUpdate(prevProps, prevState) {\n    const prevMetamask = prevProps.metamask;\n    const nextMetamask = this.props.metamask;\n\n    if (!prevMetamask && nextMetamask) {\n      await this.refreshVaultDataUser();\n    }\n  }\n\n  componentDidUpdate() {\n    return true;\n  }\n\n  modalError(msg) {\n    Modal.error({\n      title: 'Vault Error',\n      centered: true,\n      maskClosable: true,\n      content: msg,\n      okType: 'outline'\n    });\n  }\n\n  async refreshVaultData() {\n    this.setState({ vaultData: null });\n    const vaultData = await evmLib.getZoVaultData();\n    this.setState({ vaultData });\n  }\n\n  async refreshVaultDataUser() {\n    this.setState({ vaultDataUser: null });\n    const wallet = this.props.metamask.getSigner();\n    wallet.address = await wallet.getAddress();\n    const vaultDataUser = await evmLib.getZoVaultDataUser(wallet);\n    this.setState({ vaultDataUser });\n  }\n\n  componentWillUnmount() {\n  }\n\n  async claimVaultYield() {\n    try {\n      const signer = this.props.metamask.getSigner();\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      let tx = await evmLib.claimZoVaultYield(signer);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshVaultDataUser();\n    } catch (err) {\n      console.error(err);\n      this.setState({ txStatus: 'fail' });\n    }\n  }\n\n  async stakeVault() {\n    const wallet = this.props.metamask.getSigner();\n    wallet.address = await wallet.getAddress();\n\n    // 'Before stake/unstake, please claim unclaimed yield.'\n    // 'Wallet dont have enough CFX. Buy CFX at SWAPPI.'\n    const amount = this.state.stakeAmount;\n    if (!amount || amount === '')\n      return this.modalError('Please enter amount to stake/unstake.');\n\n    const amountWei = evmLib.eth2wei(amount);\n    const balance = await evmLib.getWalletBalance(wallet.address);\n\n    if (Number(amount) < 1)\n      return this.modalError('Required minimum stake is 1 CFX.');\n    if (this.state.vaultDataUser && Number(this.state.vaultDataUser.unclaimedReward) > 0)\n      return this.modalError('Before stake/unstake, please claim unclaimed yield');\n    if (balance.lt(amountWei))\n      return this.modalError('Wallet dont have enough CFX. Buy CFX at SWAPPI.');\n\n    try {\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      let tx = await evmLib.stakeZoVault(wallet, amount);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshVaultDataUser();\n    } catch (err) {\n      console.error(err);\n      this.setState({ txStatus: 'fail' });\n    }\n\n  }\n\n  async unstakeVault() {\n    const wallet = this.props.metamask.getSigner();\n    wallet.address = await wallet.getAddress();\n\n    // 'Before stake/unstake, please claim unclaimed yield.'\n    // 'Not enough CFX to unstake. Stake CFX first.' \n    const amount = this.state.stakeAmount;\n    if (!amount || amount === '')\n      return this.modalError('Please enter amount to stake/unstake.');\n\n    if (this.state.vaultDataUser && Number(this.state.vaultDataUser.unclaimedReward) > 0)\n      return this.modalError('Before stake/unstake, please claim unclaimed yield');\n    if (this.state.vaultDataUser && Number(amount) > Number(this.state.vaultDataUser.numStake))\n      return this.modalError('Not enough CFX to unstake. Stake CFX first.');\n\n\n    try {\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      let tx = await evmLib.unstakeZoVault(wallet, amount);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshVaultDataUser();\n    } catch (err) {\n      console.error(err);\n      this.setState({ txStatus: 'fail' });\n    }\n  }\n\n  renderAPYCalc() {\n    const d = this.state.vaultData;\n    const priceToken = Lib.to5digit(d.priceToken);\n    const dailyInterest = Lib.to5digit(d.dailyInterest);\n    const dailyInterestCfx = Lib.to5digit(d.dailyInterestCfx);\n    const apyCalc1 = Lib.to5digit(d.apyCalc1);\n    const apyCalc2 = Lib.to5digit(d.apyCalc2);\n\n    return (\n      <div style={{ textAlign: 'center' }}>\n        <div>Price in CFX:</div>\n        <div>1 TXT = {priceToken} CFX</div>\n        <div>Avg. Daily Yield/CFX: {dailyInterest} TXT/CFX</div>\n        <div>{dailyInterestCfx} CFX/CFX = {dailyInterestCfx}</div>\n        <div>APY Calculation:</div>\n        <div>(1 + {dailyInterestCfx})^365 - 1 * 100%</div>\n        <div>{apyCalc1} - 1  * 100%</div>\n        <div>{apyCalc2} * 100%</div>\n      </div>\n    );\n  }\n\n  render() {\n    const title = 'ZO VAULT';\n    const tokenName = 'CFX';\n    const yieldName = 'TXT';\n    const infoMsg1 = 'ZO VAULT is yield optimizer for CFX deposits at Zero One Flux. Start stake from 1 CFX and unstake waiting time only 1 hour.';\n    const infoMsg2 = 'Trade CFX or TXT in SWAPPI';\n    const unstakeEnableTime = '1 hour';\n    const imgUrl = 'https://res.cloudinary.com/dey55ubjm/image/upload/v1660552313/tbotx/CFX.png';\n\n    let apyInfo = <Spin />;\n    let numStaked = '-';\n    let unstakeAllowDate = '-';\n    let nextRewardAvailable = '-';\n    let unclaimedYield = '-';\n    let noUserData = true;\n    let enableUnstake = false;\n    let numOwned = '-';\n    let approved = true;\n    let apyCalc = null;\n    let enableMax = false;\n\n    const now = this.state.blockchainTime ? moment.unix(this.state.blockchainTime) : moment();\n    let info = (\n      <Col xs={24}>\n        <Collapse accordion>\n          <Panel header=\"Vault Information\">\n            <Row gutter={[8, 8]}>\n              <Col xs={24}>\n              <p>{infoMsg1}</p>\n              <p>{infoMsg2}</p>\n              </Col>\n              <Col xs={24}>\n                <Button type='outline' block onClick={() => Lib.openUrl('https://flux.01.finance/markets')}>VISIT ZERO ONE MARKET</Button>\n              </Col>\n              <Col xs={24}>\n                <Button type='outline' block onClick={() => Lib.openUrl(ZV_LINK)}>VERIFY ZOVAULT CONTRACT</Button>\n              </Col>\n              <Col xs={24}>\n                <Button type='outline' block onClick={() => Lib.openUrl(ZVR_LINK)}>VERIFY ZOREWARD CONTRACT</Button>\n              </Col>\n              <Col xs={24}>\n                <Button type='outline' block onClick={() => Lib.openUrl(TRADE_LINK)}>TRADE CFX OR TXT</Button>\n              </Col>\n            </Row>\n          </Panel>\n        </Collapse>\n      </Col>\n    );\n\n    if (this.state.vaultData) {\n      const d = this.state.vaultData;\n      apyInfo = <Title level={4}>APY {Lib.to2digit(d.apy)}%</Title>;\n      nextRewardAvailable = moment.unix(d.nextRewardAvailable).format('DD/MM/YY HH:mm:ss');\n      apyCalc = this.renderAPYCalc();\n\n      if (this.state.vaultDataUser) {\n        noUserData = false;\n        const du = this.state.vaultDataUser;\n        numOwned = du.ownedCFX;\n        numStaked = du.numStake;\n        unstakeAllowDate = moment.unix(du.unstakeTime).format('DD/MM/YY HH:mm:ss');\n        unclaimedYield = Lib.to5digit(du.unclaimedReward);\n        enableUnstake = now.isAfter(moment.unix(du.unstakeTime)) && Number(numStaked) > 0;\n        enableMax = (Number(numOwned) > 0)\n      }\n    }\n\n    let disableBtnYieldClaim = true;\n    let txtYield = <div>&nbsp;</div>;\n\n    if (Number(numStaked) > 0 && Number(unclaimedYield) > 0) {\n      disableBtnYieldClaim = false;\n      txtYield = (\n        <div style={{ textAlign: 'center' }}>\n          Unclaimed Yield: {unclaimedYield} {yieldName}\n        </div>\n      );\n    } else if (nextRewardAvailable !== '-') {\n      txtYield = (\n        <div style={{ textAlign: 'center' }}>\n          Yield Available: {nextRewardAvailable}\n        </div>\n      );\n    }\n\n    if (Number(numStaked) > 0 && Number(unclaimedYield) > 0) {\n      disableBtnYieldClaim = false;\n    }\n\n    let txtUnstakeTime = (\n      <div style={{ textAlign: 'center' }}>\n        <div>Unstake will be enable {unstakeEnableTime} after last Stake</div>\n      </div>\n    );\n\n    if (Number(numStaked) > 0 && !enableUnstake) {\n      txtUnstakeTime = (\n        <div style={{ textAlign: 'center' }}>\n          <div>Unstake allowed after {unstakeAllowDate}</div>\n        </div>\n      );\n    }\n\n    let btnStake;\n    let btnUnstake;\n    if (approved) {\n      btnStake = (\n        <Col xs={12}>\n          <Button disabled={noUserData} type='primary' block onClick={() => this.stakeVault()}>STAKE</Button>\n        </Col>\n      );\n      btnUnstake = (\n        <Col xs={12}>\n          <Button disabled={noUserData || !enableUnstake} type='primary' block onClick={() => this.unstakeVault()}>UNSTAKE</Button>\n        </Col>\n      );\n    }\n\n    let calcInfo = (\n      <Col xs={24} sm={24}>\n        <div style={{ textAlign: 'center' }}>\n          {apyCalc}\n          <div>&nbsp;</div>\n          {apyInfo}\n          <div><Button type=\"link\" onClick={() => this.setState({ showAPYCalc: false })}>HIDE APY CALCULATION</Button></div>\n        </div>\n      </Col>\n    );\n\n    if (!this.state.showAPYCalc) {\n      calcInfo = (\n        <Col xs={24} sm={24}>\n          <div style={{ textAlign: 'center' }}>\n            <Image\n              height='64px'\n              src={imgUrl}\n            />\n            <div>&nbsp;</div>\n            <div>Stake {tokenName} Earn {yieldName}</div>\n            {apyInfo}\n            <div><Button type=\"link\" onClick={() => this.setState({ showAPYCalc: true })}>SHOW APY CALCULATION</Button></div>\n          </div>\n        </Col>\n      );\n    }\n\n    return (\n      <Card title={\n        <Title level={4}>{title}</Title>\n      } style={{ height: '100%' }} headStyle={{ textAlign: 'center' }}>\n        <TXAlert showTxPopup={this.state.showTxPopup} txStatus={this.state.txStatus} txHash={this.state.txHash}\n          onBack={() => this.setState({ showTxPopup: false })} />\n        <Row gutter={[8, 8]}>\n          {info}\n          <div>&nbsp;</div>\n        </Row>\n        <Row gutter={[8, 8]}>\n          {calcInfo}\n        </Row>\n        <Divider />\n        <Row gutter={[8, 8]}>\n          <Col xs={24} sm={24}>\n            <div style={{ textAlign: 'center' }}>\n              <div>Staked: {numStaked} {tokenName}</div>\n              {txtUnstakeTime}\n              Owned: {numOwned} {tokenName}\n            </div>\n          </Col>\n          <Col xs={24}>\n            <div style={{ display: 'flex' }}>\n              <div style={{ flex: 1 }}>\n                <Input disabled={!approved} addonAfter={tokenName} placeholder='Enter amount to stake/unstake'\n                  value={this.state.stakeAmount}\n                  onChange={(e) => this.setState({ stakeAmount: e.target.value })}\n                />\n              </div>\n              <div>\n                <Button disabled={!enableMax} type=\"link\" onClick={() => this.setState({ stakeAmount: ('' + numOwned) })}>MAX</Button>\n              </div>\n            </div>\n          </Col>\n          {btnStake}\n          {btnUnstake}\n          <Col xs={24}>\n            <Divider />\n            {txtYield}\n          </Col>\n          <Col xs={24}>\n            <Button disabled={noUserData || disableBtnYieldClaim} type='primary' block onClick={() => this.claimVaultYield()}>CLAIM</Button>\n          </Col>\n        </Row>\n      </Card >\n    );\n  }\n\n}\n\nexport default ZoVault;\n","import React from 'react';\nimport { Image, Button, Row, Col, Card, Typography, Spin } from 'antd';\nimport evmLib from '../evmLib';\nimport Lib from '../Lib';\nimport TXAlert from './TXAlert';\n\nconst { Title } = Typography;\n\nclass NFTOwned extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      connected: false,\n      nftId2detail: {}\n    };\n  }\n\n  async componentDidMount() {\n    const blockchainTime = await evmLib.getBlockchainTime();\n    this.setState({ blockchainTime });\n\n    await this.refreshData();\n  }\n\n  async getSnapshotBeforeUpdate(prevProps, prevState) {\n    const prevMetamask = prevProps.metamask;\n    const nextMetamask = this.props.metamask;\n\n    if (!prevMetamask && nextMetamask) {\n      await this.refreshDataUser();\n      return;\n    }\n\n    const prevRefreshNum = prevProps.refreshNum;\n    const nextRefreshNum = this.props.refreshNum;\n    if (prevRefreshNum !== nextRefreshNum) {\n      await this.refreshDataUser();\n      return;\n    }\n\n  }\n\n  componentDidUpdate() {\n    return true;\n  }\n\n  async refreshData() {\n  }\n\n  async refreshDataUser() {\n    this.setState({ ownedNFTs: [], busyDataOwned: true, connected: true });\n\n    const wallet = this.props.metamask.getSigner();\n    wallet.address = await wallet.getAddress();\n\n    let dataOwned = await evmLib.getOwnedNFTDataUri(wallet, wallet.address);\n\n    const ownedNFTs = [];\n    for (let i = 0; i < dataOwned.length; i++) {\n      const data = dataOwned[i];\n      ownedNFTs.unshift({\n        id: data.id.toNumber(),\n        metadata: data.metadata\n      });\n    }\n\n    this.setState({ ownedNFTs, busyDataOwned: false });\n\n    for (let i = 0; i < ownedNFTs.length; i++) {\n      const nftId = ownedNFTs[i].id;\n      const nftId2detail = this.state.nftId2detail;\n      const detail = await evmLib.getOwnedNFTDetail(nftId, wallet);\n      nftId2detail[nftId] = detail;\n      this.setState({ nftId2detail });\n    }\n  }\n\n  componentWillUnmount() {\n  }\n\n  async claimProfit(nftId, unclaimedTurns) {\n    try {\n      const metamask = this.props.metamask;\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      const turns = unclaimedTurns;\n      let tx = await evmLib.claimNFTProfit(metamask.getSigner(), nftId, turns);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n\n      const nftId2detail = this.state.nftId2detail;\n      nftId2detail[nftId] = undefined;\n      this.setState({ nftId2detail });\n      const detail = await evmLib.getOwnedNFTDetail(nftId, metamask.getSigner());\n      nftId2detail[nftId] = detail;\n      this.setState({ nftId2detail });\n\n      this.setState({ txStatus: 'confirmed' });\n      await this.refreshDataUser();\n    } catch (err) {\n      this.setState({ txStatus: 'fail' });\n    }\n  }\n\n  render() {\n    const rows = [\n    ];\n\n    const owned = this.state.ownedNFTs;\n    const nftId2detail = this.state.nftId2detail;\n\n    if (owned && owned.length > 0) {\n      for (let i = 0; i < owned.length; i++) {\n        const nft = owned[i];\n        const detail = nftId2detail[nft.id];\n        const row = {\n          nftId: nft.id,\n          name: nft.metadata.name,\n          img: nft.metadata.image,\n          unclaimedProfit: false,\n          unclaimedTurns: [],\n          enable: false\n        }\n\n        if (detail) {\n          row.unclaimedProfit = evmLib.wei2eth(detail.totalUnclaimed);\n          row.unclaimedTurns = detail.unclaimedTurns;\n          row.enable = (detail.unclaimedTurns.length > 0);\n        }\n\n        rows.push(row);\n      }\n    }\n\n    let content;\n    if (this.state.busyDataOwned) {\n      content =\n        (\n          <div style={{ textAlign: 'center' }}>\n            <div>&nbsp;</div>\n            <Spin />\n            <div>&nbsp;</div>\n          </div>\n        );\n    } else if (rows.length > 0) {\n      content = (\n        <Row gutter={[8, 8]} justify='center'>\n          {rows.map((item, index) => {\n            const enable = item.enable;\n            const unclaimed = item.unclaimedProfit;\n            const img = item.img;\n            let line = (<div style={{ textAlign: 'center' }}><Spin /></div>);\n            if (unclaimed) {\n              line = (<div style={{ textAlign: 'center' }}>Unclaimed Token: {unclaimed} TXT</div>);\n            }\n            const nftId = item.nftId;\n            const unclaimedTurns = item.unclaimedTurns;\n\n            return (\n              <Col key={index} xs={24} sm={8} style={{}}>\n                <Card type='inner' title={<Title style={{ textAlign: 'center', height: '100%' }} level={5}>{item.name}</Title>}>\n                  <Row gutter={[8, 8]}>\n                    <Col span={24}>\n                      <div style={{ textAlign: 'center' }}>\n                        <Image\n                          width={128}\n                          src={img}\n                        />\n                      </div>\n                    </Col>\n                    <Col span={24}>\n                      <div>&nbsp;</div>\n                      {line}\n                      <div>&nbsp;</div>\n                      <Button block disabled={!enable} type='primary' onClick={() => this.claimProfit(nftId, unclaimedTurns)}>CLAIM TOKEN</Button>\n                    </Col>\n                    <Col span={24}>\n                      <Button block onClick={() => Lib.openUrl('https://evm.confluxscan.net/nft/0xa70aeb0a2f9d81d3b75e50736791821db6cf6846/' + item.nftId)}>CONFLUXSCAN</Button>\n                    </Col>\n                  </Row>\n                </Card>\n              </Col>\n            );\n          })}\n        </Row>\n\n      );\n    } else {\n      content =\n        (\n          <div style={{ textAlign: 'center' }}>\n            <div>&nbsp;</div>\n            Traderbot X genesis member. Earn TXT token daily!\n            <div>&nbsp;</div>\n          </div>\n        );\n    }\n\n    return (\n      <Card title={<Title level={4}>Owned NFTs</Title>} style={{ height: '100%' }} headStyle={{ textAlign: 'center' }}>\n        <TXAlert showTxPopup={this.state.showTxPopup} txStatus={this.state.txStatus} txHash={this.state.txHash}\n          onBack={() => this.setState({ showTxPopup: false })} />\n        {content}\n      </Card>\n    );\n  }\n\n}\n\nexport default NFTOwned;\n","import React from 'react';\nimport { message, Modal, Layout, Button, Row, Col, Card, Typography, Spin, Space, Statistic, Alert, Divider } from 'antd';\nimport { HddOutlined, CopyOutlined } from '@ant-design/icons';\nimport { useMediaQuery } from 'react-responsive'\nimport evmLib from '../evmLib';\nimport feathersLib from '../feathersLib';\nimport Lib from '../Lib';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport moment from 'moment';\nimport LPVault from './LPVault';\nimport PoSVault from './PoSVault';\nimport ZoVault from './ZoVault';\nimport NFTOwned from './NFTOwned';\n\nconst { Title, Text, Paragraph } = Typography;\nconst { Footer, Content } = Layout;\nconst {\n  TOKEN,\n  GAS,\n  DEX,\n  CHAIN_NAME,\n  TRADE_LINK,\n  FORUM_LINK,\n  TWITTER_LINK,\n  TELEGRAM_LINK,\n  TOKEN_LINK,\n  NFT_LINK,\n  CHART_LINK,\n  DEXTOOLS,\n  EXPLORER_TX,\n  LP_LINK\n} = require('../config');\n\nconst Mobile = ({ children }) => {\n  const isMobile = useMediaQuery({ maxWidth: 767 })\n  return isMobile ? children : null\n}\nconst Default = ({ children }) => {\n  const isNotMobile = useMediaQuery({ minWidth: 768 })\n  return isNotMobile ? children : null\n}\n\nfunction shortHex(hexStr) {\n  const ret = hexStr.slice(0, 9) + '...' + hexStr.slice(hexStr.length - 7);\n  return ret;\n}\n\nfunction to5digit(val) {\n  return Math.floor(Number(val) * 100000) / 100000;\n}\n\nlet OUT;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDisclaimer: true,\n      metamaskStatus: 'busy',\n      busyData: true,\n      busyDataOwned: true,\n      stakeAmount: '',\n      posVaultError: false,\n      minterError: false\n    };\n  }\n  async componentDidMount() {\n    await this.refreshData();\n    await this.connectWallet();\n  }\n\n  async refreshData() {\n    this.setState({ busyData: true });\n    const publicData = await feathersLib.getPublicData();\n    this.setState(publicData);\n    const blockchainTime = await evmLib.getBlockchainTime();\n    this.setState({ blockchainTime });\n    this.setState({ busyData: false });\n  }\n\n  async connectWallet() {\n    this.setState({ metamask: null, metamaskStatus: 'busy' });\n    try {\n      const check = await evmLib.detectMetamask();\n      if (check) {\n        const metamask = await evmLib.loadMetamask();\n        this.metamask = metamask;\n        this.metamask.address = await this.metamask.getSigner().getAddress();\n        this.setState({ metamask, metamaskStatus: 'connected' });\n      }\n    } catch (err) {\n      const msg1 = 'Please install Metamask and reload!';\n      const msg2 = 'Please connect Metamask to Conflux eSpace!';\n\n      if (err.message) {\n        const msg = err.message;\n        if (msg === msg1 || msg === msg2)\n          this.setState({ metamaskError: err.message });\n        else\n          this.setState({ metamaskError: 'Please install Metamask and reload!' });\n      }\n      this.setState({ metamaskStatus: 'disconnected' });\n    }\n\n    this.wallet = await evmLib.loadWalletRandom();\n    await this.refreshData();\n    await this.refreshPosVaultData();\n    if (this.metamask) {\n      await this.refreshPosVaultDataUser();\n    }\n\n  }\n\n  async refreshPosVaultData() {\n    this.setState({ posVaultData: null });\n    const posVaultData = await evmLib.getPosVaultData();\n    this.setState({ posVaultData });\n  }\n\n  async refreshPosVaultDataUser() {\n    this.setState({ posVaultDataUser: null });\n    const wallet = this.metamask.getSigner();\n    wallet.address = this.metamask.address;\n    const posVaultDataUser = await evmLib.getPosVaultDataUser(wallet);\n    this.setState({ posVaultDataUser });\n  }\n\n  componentWillUnmount() {\n  }\n\n  goto(page) {\n    this.props.history.push(page);\n  }\n\n  async mintNFT(amountCoin) {\n    if (!this.metamask) {\n      return message.error('not connected to metamask');\n    }\n\n    const amountWei = evmLib.eth2wei(amountCoin + '');\n    const balance = await evmLib.getWalletBalance(this.metamask.address);\n\n    if (balance.lt(amountWei))\n      return this.setState({ minterError: 'Wallet dont have enough CFX. Buy CFX at Swappi.' });\n\n    try {\n      this.setState({ showTxPopup: true, txHash: false, txStatus: 'waiting' });\n      const amount = evmLib.eth2wei(amountCoin + '').toString();\n      let tx = await evmLib.mintNFT(this.metamask.getSigner(), amount, 1);\n      this.setState({ txHash: tx.hash });\n      await tx.wait();\n\n      let refreshNum = this.state.refreshNum ? this.state.refreshNum : 0;\n      refreshNum++;\n      await Lib.delay(500);\n      this.setState({ refreshNum });\n\n      this.setState({ txStatus: 'confirmed' });\n    } catch (err) {\n      this.setState({ txStatus: 'fail' });\n    }\n  }\n\n  gotoDex() {\n    Lib.openUrlHere(TRADE_LINK);\n  }\n\n  gotoForum() {\n    Lib.openUrlHere(FORUM_LINK);\n  }\n\n  gotoTwitter() {\n    Lib.openUrlHere(TWITTER_LINK);\n  }\n\n  gotoTelegram() {\n    Lib.openUrlHere(TELEGRAM_LINK);\n  }\n\n  async copyToClipboard() {\n    const tokenAddress = evmLib.TOKEN_ADDRESS;\n    await Lib.copyToClipboard(tokenAddress);\n  }\n\n  async addTokenToMetamask() {\n    await evmLib.addTokenToMetamask();\n  }\n\n  renderHero() {\n    const msg = 'Yield optimizer for native coin. Deployed on Conflux eSpace & traded as TXT/CFX on Swappi';\n    return (\n      <div style={{ width: '100%', height: '100%', padding: '5vh', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n        <Title style={{ textAlign: 'center' }} level={2}>TRADERBOT X</Title>\n        <Text style={{ textAlign: 'center' }}>{msg}</Text>\n      </div>\n    );\n  }\n\n  renderStat() {\n    const xs = 24;\n    const sm = 12;\n\n    const tokenAddress = evmLib.TOKEN_ADDRESS;\n    const shortTokenAddress = tokenAddress.slice(0, 9) + '...' + tokenAddress.slice(tokenAddress.length - 7);\n\n    function toPrice(val) {\n      const ret = val ? Math.floor(Number(val) * 1000000) / 1000000 : '-';\n      return ret;\n    }\n\n    const currentPrice = toPrice(this.state.currentPrice) + ' ' + GAS;\n    let athPctg = ' (' + (this.state.athPctg >= 0 ? this.state.athPctg : '-') + ' %)';\n    let atlPctg = ' (' + (this.state.atlPctg >= 0 ? this.state.atlPctg : '-') + ' %)';\n    if (this.state.athPctg) {\n      if (this.state.athPctg > 0) athPctg = ' (+' + this.state.athPctg + ' %)';\n      else athPctg = ' (' + this.state.athPctg + ' %)';\n    }\n    if (this.state.atlPctg) {\n      if (this.state.atlPctg > 0) atlPctg = ' (+' + this.state.atlPctg + ' %)';\n      else atlPctg = ' (' + this.state.atlPctg + ' %)';\n    }\n    const ATH = toPrice(this.state.athPrice) + ' ' + GAS + athPctg;\n    const ATL = toPrice(this.state.atlPrice) + ' ' + GAS + atlPctg;\n    const pc1 = '' + (this.state.pctg1 ? this.state.pctg1 : '-') + ' %';\n    const pc7 = '' + (this.state.pctg7 ? this.state.pctg7 : '-') + ' %';\n    const pc30 = '' + (this.state.pctg30 ? this.state.pctg30 : '-') + ' %';\n    const pc365 = '' + (this.state.pctg365 ? this.state.pctg365 : '-') + ' %';\n\n    let btn = <span />;\n\n    const nftMinted = this.state.nftMinted ? this.state.nftMinted : '-';\n    let nftGenerated = this.state.nftGenerated ? Math.floor(this.state.nftGenerated) : '-';\n    nftGenerated = nftGenerated + ' ' + TOKEN;\n\n    let out = [];\n    out.push('Traderbot X Daily Stat (' + moment().format('DD/MM/YYYY') + ')');\n    out.push('current price: ' + currentPrice);\n    out.push('from ATH: ' + ATH);\n    out.push('from ATL: ' + ATL);\n    out.push('nft minted: ' + nftMinted);\n    out.push('earned by nft: ' + nftGenerated);\n    out = out.join('\\n');\n    if (OUT !== out) {\n      OUT = out;\n      console.log(out);\n    }\n\n\n    const renderTitle = (\n      <Row>\n        <Col span={24}>\n          <Mobile>\n            <Space align='center' direction='vertical' style={{ width: '100%' }}>\n              <Text>Traderbot X Token (TXT)</Text>\n              {btn}\n            </Space>\n          </Mobile>\n          <Default>\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n              <Text>Traderbot X Token (TXT)</Text>\n              {btn}\n            </div>\n          </Default>\n        </Col>\n      </Row>\n    );\n\n    return (\n      <Card title={renderTitle} style={{ height: '100%' }} headStyle={{}}>\n        <Row gutter={[8, 8]}>\n          <Col xs={xs} sm={sm}>\n            <Statistic title=\"Address\" value={shortTokenAddress} suffix={\n              <CopyToClipboard text={tokenAddress} onCopy={() => message.info('address copied to clipboard')}>\n                <Button type='link' icon={<CopyOutlined />} />\n              </CopyToClipboard>\n            } />\n          </Col>\n          <Col xs={xs} sm={sm}>\n            <Statistic title=\"Current Price\" value={currentPrice} />\n          </Col>\n          <Col xs={xs} sm={sm}>\n            <Statistic title=\"All Time High\" value={ATH} />\n          </Col>\n          <Col xs={xs} sm={sm}>\n            <Statistic title=\"All Time Low\" value={ATL} />\n          </Col>\n          <Col xs={xs} sm={sm}>\n            <Statistic title=\"Price Change D-1\" value={pc1} />\n          </Col>\n          <Col xs={xs} sm={sm}>\n            <Statistic title=\"Price Change D-7\" value={pc7} />\n          </Col>\n          <Col xs={xs} sm={sm}>\n            <Statistic title=\"Price Change D-30\" value={pc30} />\n          </Col>\n          <Col xs={xs} sm={sm}>\n            <Statistic title=\"Price Change Y-1\" value={pc365} />\n          </Col>\n          <Col xs={xs} sm={sm}>\n            <Statistic title=\"Minted NFT\" value={nftMinted} />\n          </Col>\n          <Col xs={xs} sm={sm}>\n            <Statistic title=\"Earned by NFT\" value={nftGenerated} />\n          </Col>\n          <Col xs={24} sm={8}>\n            <Button type='primary' block onClick={() => this.gotoDex()}>{'TRADE ' + TOKEN + ' ON ' + DEX}</Button>\n          </Col>\n          <Col xs={24} sm={8}>\n            <Button type='primary' block onClick={() => Lib.openUrlHere(CHART_LINK)}>{'VIEW CHART ON ' + DEXTOOLS}</Button>\n          </Col>\n          <Col xs={24} sm={8}>\n            <Button type='primary' block onClick={() => Lib.openUrlHere(LP_LINK)}>{'ADD LIQUIDITY FOR CFX/TXT'}</Button>\n          </Col>\n          <Col xs={24} sm={8}>\n            <Button block onClick={() => this.addTokenToMetamask()}>{'ADD ' + TOKEN + ' INTO METAMASK'}</Button>\n          </Col>\n          <Col xs={24} sm={8}>\n            <Button block onClick={() => Lib.openUrlHere(TOKEN_LINK)}>VERIFY TOKEN CONTRACT</Button>\n          </Col>\n          <Col xs={24} sm={8}>\n            <Button block onClick={() => Lib.openUrlHere(NFT_LINK)}>VERIFY NFT CONTRACT</Button>\n          </Col>\n        </Row>\n      </Card>\n    );\n  }\n\n  renderTop() {\n    let btnMetamask = <Spin />;\n    let errMetamask;\n\n    if (this.state.metamaskStatus === 'connected') {\n      btnMetamask = (\n        <Button type=\"primary\" onClick={() => {\n          this.connectWallet();\n          window.location.reload();\n        }}>\n          CONNECTED TO {CHAIN_NAME}\n        </Button>\n      );\n\n    } else if (this.state.metamaskStatus === 'disconnected') {\n      btnMetamask = (\n        <Button type=\"primary\" onClick={() => {\n          this.connectWallet();\n          window.location.reload();\n        }}>\n          CONNECT METAMASK\n        </Button>\n      );\n\n      if (this.state.metamaskError) {\n        errMetamask = <Alert message={this.state.metamaskError} type=\"error\" />;\n      }\n    }\n\n    const links = (\n      <Space split={<Divider type=\"vertical\" />}>\n        <Typography.Link onClick={() => this.gotoTwitter()}>Twitter</Typography.Link>\n        <Typography.Link onClick={() => this.gotoTelegram()}>Telegram</Typography.Link>\n        <Typography.Link onClick={() => this.gotoForum()}>Forum</Typography.Link>\n      </Space>\n    );\n\n    return (\n      <Row>\n        <Col span={24}>\n          <Mobile>\n            <Space align='center' direction='vertical' style={{ width: '100%' }}>\n              {btnMetamask}\n              {errMetamask}\n              {links}\n            </Space>\n          </Mobile>\n          <Default>\n            <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center' }}>\n              {links}\n              <Space direction='horizontal'>\n                {errMetamask}\n                {btnMetamask}\n              </Space>\n            </div>\n          </Default>\n        </Col>\n      </Row>\n    );\n  }\n\n  renderModal() {\n    return (\n      <Modal title={'DISCLAIMER'} visible={this.state.showDisclaimer} centered={true} footer={[\n        <Button key=\"back\" onClick={() => this.setState({ showDisclaimer: false })}>\n          I Understand\n        </Button>,\n      ]}>\n        <Title level={3}>No Investment Advice</Title>\n        <Paragraph>\n          The information provided on this website does not constitute investment advice, financial advice, trading advice, or any other sort of advice and you should not treat any of the website's content as such. Traderbot X does not recommend that any cryptocurrency should be bought, sold, or held by you. Do conduct your own due diligence and consult your financial advisor before making any investment decisions.\n        </Paragraph>\n\n        <Title level={3}>Do Your Own Research</Title>\n        <Paragraph>\n          TXT Token, TBOTX NFT, PoS VAULT, ZO VAULT, and LP VAULT are open sourced and verified in Confluxscan. Use at your own risk! We assumes no responsibility or liability if there is a bug in the source code.\n        </Paragraph>\n      </Modal>\n    );\n  }\n\n  renderModalTx() {\n\n    const wording = this.state.txStatus ? this.state.txStatus.toUpperCase() : 'OK';\n    let linkToExplorer = <Spin />;\n    if (this.state.txHash) {\n      const txHash = this.state.txHash;\n      const shortTxHash = shortHex(txHash);\n      const url = EXPLORER_TX + txHash;\n      linkToExplorer = (\n        <Space direction='vertical' align='center'>\n          <Text>{shortTxHash}</Text>\n          <Button type='link' onClick={() => Lib.openUrlHere(url)}>VIEW ON EXPLORER</Button>\n        </Space>\n      );\n    }\n\n    return (\n      <Modal title={'TRANSACTION'} visible={this.state.showTxPopup} centered={true} footer={[\n        <Button key=\"back\" onClick={() => this.setState({ showTxPopup: false })}>\n          {wording}\n        </Button>,\n      ]}>\n        <div style={{ textAlign: 'center' }}>\n          {linkToExplorer}\n        </div>\n      </Modal>\n    );\n  }\n\n  render() {\n    return (\n      <Layout>\n        {this.renderModal()}\n        {this.renderModalTx()}\n        <Content style={{ padding: 16, overflowX: 'hidden' }}>\n          <Row justify=\"center\"><Col xs={24} sm={24} md={24} lg={24} xl={24} xxl={20}>\n            <Row style={{}} gutter={[8, 8]}>\n              <Col xs={24} sm={24}>\n                {this.renderTop()}\n              </Col>\n              <Col span={24} style={{}}>\n                {this.renderHero()}\n              </Col>\n              <Col span={24} style={{}}>\n                {this.renderStat()}\n              </Col>\n              <Col xs={24} sm={8}>\n                <PoSVault metamask={this.state.metamask} />\n              </Col>\n              <Col xs={24} sm={8}>\n                <ZoVault metamask={this.state.metamask} />\n              </Col>\n              <Col xs={24} sm={8}>\n                <LPVault metamask={this.state.metamask} />\n              </Col>\n              <Col span={24}>\n                {this.renderMinter()}\n              </Col>\n              <Col span={24}>\n                <NFTOwned metamask={this.state.metamask} refreshNum={this.state.refreshNum} />\n              </Col>\n            </Row>\n          </Col></Row>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>\n          <Text>#traderbotx 2022 v2.4.0</Text>\n        </Footer>\n      </Layout>\n    );\n  }\n\n  renderMinter() {\n    const avgPPS = this.state.avgProfitPerShare ? Number(this.state.avgProfitPerShare) : 0;\n    let estDailyToken = 10 * avgPPS;\n    const rows = [\n      { title: 'TBOTX T-0', share: 10, price: 50, estDailyProfit: to5digit(10 * avgPPS) },\n      { title: 'TBOTX T-1', share: 100, price: 500, estDailyProfit: to5digit(100 * avgPPS) },\n      { title: 'TBOTX T-2', share: 1000, price: 5000, estDailyProfit: to5digit(1000 * avgPPS) },\n      { title: 'TBOTX T-3', share: 10000, price: 50000, estDailyProfit: to5digit(10000 * avgPPS) }\n    ];\n\n    let priceToken = '-';\n    let estDailyTokenCFX = '-';\n    let estROI = '-';\n    function toPrice(val) {\n      const ret = val ? Math.floor(Number(val) * 1000000) / 1000000 : 0;\n      return ret;\n    }\n\n    const currentPrice = toPrice(this.state.currentPrice);\n\n    if (currentPrice > 0) {\n      priceToken = currentPrice;\n      estDailyTokenCFX = estDailyToken * priceToken;\n      estROI = Math.round((50 / estDailyTokenCFX));\n\n      priceToken = to5digit(priceToken);\n      estDailyToken = to5digit(estDailyToken);\n      estDailyTokenCFX = to5digit(estDailyTokenCFX);\n    }\n\n    let minterError;\n    if (this.state.minterError) {\n      const msg = this.state.minterError;\n      minterError = (<Col xs={24}><Alert message={msg} type=\"error\" closable onClose={() => this.setState({ minterError: false })} /></Col>);\n    }\n\n    return (\n      <Card title={<Title level={4}>Traderbot X NFT</Title>} style={{ height: '100%' }} headStyle={{ textAlign: 'center' }}>\n        <Row gutter={[8, 8]} align='middle'>\n          <Col xs={24}>\n            <p style={{ textAlign: 'center' }}>Own Traderbot X NFT and receive token daily. NFTs maximum supply limited to 8888.</p>\n          </Col>\n          <Col xs={24} sm={12}>\n            <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n              <HddOutlined style={{ fontSize: '5vh' }} />\n              <div>&nbsp;</div>\n              <div>Avg. Daily Token:</div>\n              <div>{estDailyToken} TXT</div>\n              <div>Priced in CFX (1 TXT = {priceToken} CFX):</div>\n              <div>{estDailyTokenCFX} CFX</div>\n              <div>&nbsp;</div>\n              <Title level={4}>Est. ROI {estROI} Days</Title>\n              <div>&nbsp;</div>\n            </div>\n          </Col>\n          <Col xs={24} sm={12}>\n            <Row gutter={[8, 8]}>\n              {minterError}\n              {rows.map((item, index) => {\n                return (\n                  <Col key={index} xs={12} sm={12} style={{}}>\n                    <Card type='inner' title={<Title style={{ textAlign: 'center', height: '100%' }} level={5}>{item.title}</Title>}>\n                      <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n                        <Space direction=\"vertical\" align=\"center\">\n                          <Text> </Text>\n                          <div style={{ textAlign: 'center' }}>Daily Token Multiplier:</div>\n                          <div style={{ textAlign: 'center' }}>{item.share / 10}X</div>\n                          <div style={{ textAlign: 'center' }}>Minting Fee: {item.price} {GAS}</div>\n                          <Text> </Text>\n                        </Space>\n                        <Button type='primary' onClick={() => this.mintNFT(item.price)}>\n                          MINT NFT\n                        </Button>\n                      </div>\n                    </Card>\n                  </Col>\n                );\n              })}\n            </Row>\n          </Col>\n        </Row>\n      </Card>\n    )\n\n  }\n\n}\n\nexport default Dashboard;\n","import './App.less';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Dashboard from './game/Dashboard';\n\nfunction GlobalRouter() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" component={Dashboard} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default GlobalRouter;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n  GAS: 'CFX',\n  USDT: 'USDC',\n  TOKEN: 'TXT',\n  TOKEN_NAME: 'Traderbot X Token',\n  DEX: 'SWAPPI',\n  PRIMARY_COLOR: '#347A6C',\n  CHAIN_NAME: 'CONFLUX ESPACE',\n  CHAIN_ID: 1030,\n  MAINNET_FORK: true,\n  PROVIDER_URL: 'https://evm.confluxrpc.com', // 'https://evm.confluxrpc.com', // http://localhost:8545 \n  ROUTER_ADDRESS: '0x62b0873055bf896dd869e172119871ac24aea305',\n  FACTORY_ADDRESS: '0xe2a6f7c0ce4d5d300f97aa7e125455f5cd3342f5',\n  TOKEN_LINK: 'https://evm.confluxscan.io/token/0xb7C611454994Da5056f9450a3470E6aB7B245B04',\n  NFT_LINK: 'https://evm.confluxscan.io/token/0xA70AEb0a2f9D81D3b75E50736791821DB6cF6846',\n  VAULT_LINK: 'https://evm.confluxscan.io/address/0x4c0dde4d078efcde8ac99cea7d2e3de846d05f77?tab=contract-viewer',\n  VAULTREWARD_LINK: 'https://evm.confluxscan.io/address/0xb3857cf682f8ba9fa6bf72f12463b30002b970c1?tab=contract-viewer',\n  LPVAULT_LINK: 'https://evm.confluxscan.net/address/0x06487daeef4ab6459ad2c94006667cd93fd68d07?tab=contract-viewer',\n  TRADE_LINK: 'https://app.swappi.io/#/swap?inputCurrency=CFX&outputCurrency=0xb7C611454994Da5056f9450a3470E6aB7B245B04',\n  FORUM_LINK: 'https://forum.conflux.fun/t/traderbot-x-v2-token-nft-vault/16035',\n  TELEGRAM_LINK: 'https://t.me/+r4bHssDPCbwyNzc1',\n  TWITTER_LINK: 'https://twitter.com/traderbotx',\n  SERVER: 'https://ddb7-54-169-184-214.ap.ngrok.io',\n  TOKEN_IMAGE: 'https://res.cloudinary.com/dey55ubjm/image/upload/v1651118670/tbotx/logo192.png',\n  CHART_LINK: 'https://dexscreener.com/conflux/0x2c5224b24277134cb5cec82541d23c2f769205de',\n  DEXTOOLS: 'DEXSCREENER',\n  EXPLORER_TX: 'https://evm.confluxscan.net/tx/',\n  LP_LINK: 'https://app.swappi.io/#/add/v2/CFX/0xb7C611454994Da5056f9450a3470E6aB7B245B04', // 'https://swappi.io/#/add/v2/CFX/0xb7C611454994Da5056f9450a3470E6aB7B245B04'\n  ZVR_LINK: \"https://evm.confluxscan.io/address/0xD84627399abeDe867Ee11fb854cb0939F9e1C90d?tab=contract-viewer\",\n  ZV_LINK: \"https://evm.confluxscan.io/address/0x481CbE3AC67dAC0513E6a4E793FdB6d0067626F7?tab=contract-viewer\"\n};\n\n\n"],"sourceRoot":""}